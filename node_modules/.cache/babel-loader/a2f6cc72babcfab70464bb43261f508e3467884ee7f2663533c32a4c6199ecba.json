{"ast":null,"code":"import * as utils from '../common/utils.js';\nimport { getState, setState } from \"../common/state.js\";\nimport { setPrevTime } from '../common/tick.js';\nimport { wheelDataHandler } from './wheelDataHandler.js';\nimport { getScrollSettings } from '../common/utilsFP.js';\nimport { scrollUpToFullpage } from './scrollBeyondFullPage.js';\nexport function beyondFullPageHandler(container, e) {\n  var curTime = new Date().getTime();\n  var pauseScroll = getState().isBeyondFullpage && container.getBoundingClientRect().bottom >= 0 && wheelDataHandler.getDirection() === 'up';\n  var g_isAboutToScrollToFullPage = getState().isAboutToScrollToFullPage;\n  if (g_isAboutToScrollToFullPage) {\n    setPrevTime(curTime);\n    utils.preventDefault(e);\n    return false;\n  }\n  if (getState().isBeyondFullpage) {\n    if (!pauseScroll) {\n      keyframeTime('set', 'beyondFullpage', 1000);\n    } else {\n      var shouldSetFixedPosition = !g_isAboutToScrollToFullPage && (!keyframeTime('isNewKeyframe', 'beyondFullpage') || !wheelDataHandler.isAccelerating());\n      var scrollSettings;\n      if (shouldSetFixedPosition) {\n        scrollSettings = getScrollSettings(utils.getLast(getState().sections).item.offsetTop + utils.getLast(getState().sections).item.offsetHeight);\n        scrollSettings.element.scrollTo(0, scrollSettings.options);\n        setState({\n          isAboutToScrollToFullPage: false\n        });\n        utils.preventDefault(e);\n        return false;\n      } else if (wheelDataHandler.isAccelerating()) {\n        pauseScroll = false;\n        setState({\n          isAboutToScrollToFullPage: true\n        });\n        setState({\n          scrollTrigger: 'wheel'\n        });\n        scrollUpToFullpage();\n        utils.preventDefault(e);\n        return false;\n      }\n    }\n    if (!g_isAboutToScrollToFullPage) {\n      // allow normal scrolling, but quitting\n      if (!pauseScroll) {\n        return true;\n      }\n    }\n  }\n}\nvar keyframeTime = function () {\n  let isNew = false;\n  var frames = {};\n  var timeframes = {};\n  return function (action, name, timeframe) {\n    switch (action) {\n      case 'set':\n        frames[name] = new Date().getTime();\n        timeframes[name] = timeframe;\n        break;\n      case 'isNewKeyframe':\n        const current = new Date().getTime();\n        isNew = current - frames[name] > timeframes[name];\n        break;\n    }\n    return isNew;\n  };\n}();","map":{"version":3,"names":["utils","getState","setState","setPrevTime","wheelDataHandler","getScrollSettings","scrollUpToFullpage","beyondFullPageHandler","container","e","curTime","Date","getTime","pauseScroll","isBeyondFullpage","getBoundingClientRect","bottom","getDirection","g_isAboutToScrollToFullPage","isAboutToScrollToFullPage","preventDefault","keyframeTime","shouldSetFixedPosition","isAccelerating","scrollSettings","getLast","sections","item","offsetTop","offsetHeight","element","scrollTo","options","scrollTrigger","isNew","frames","timeframes","action","name","timeframe","current"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/beyondFullpage/beyondFullPageHandler.js"],"sourcesContent":["import * as utils from '../common/utils.js';\nimport { getState, setState } from \"../common/state.js\";\nimport { setPrevTime } from '../common/tick.js';\nimport { wheelDataHandler } from './wheelDataHandler.js';\nimport { getScrollSettings } from '../common/utilsFP.js';\nimport { scrollUpToFullpage } from './scrollBeyondFullPage.js';\n\nexport function beyondFullPageHandler(container, e){\n    var curTime = new Date().getTime();\n    var pauseScroll = getState().isBeyondFullpage && container.getBoundingClientRect().bottom >= 0 && wheelDataHandler.getDirection() === 'up';\n    var g_isAboutToScrollToFullPage = getState().isAboutToScrollToFullPage;\n\n    if(g_isAboutToScrollToFullPage){\n        setPrevTime(curTime);\n        utils.preventDefault(e);\n        return false;\n    }\n\n    if(getState().isBeyondFullpage){\n        if(!pauseScroll){\n            keyframeTime('set', 'beyondFullpage', 1000);\n        }\n        else {\n            var shouldSetFixedPosition = !g_isAboutToScrollToFullPage && (!keyframeTime('isNewKeyframe', 'beyondFullpage') || !wheelDataHandler.isAccelerating() );\n            var scrollSettings;\n            if( shouldSetFixedPosition ){\n                scrollSettings = getScrollSettings(utils.getLast(getState().sections).item.offsetTop + utils.getLast(getState().sections).item.offsetHeight);\n                scrollSettings.element.scrollTo(0, scrollSettings.options);\n                setState({isAboutToScrollToFullPage: false});\n\n                utils.preventDefault(e);\n                return false;\n            }\n            else if( wheelDataHandler.isAccelerating() ){\n                pauseScroll = false;\n                setState({isAboutToScrollToFullPage: true});\n                setState({scrollTrigger: 'wheel'});\n\n                scrollUpToFullpage();\n                \n                utils.preventDefault(e);\n                return false;\n            }\n        }\n\n        if(!g_isAboutToScrollToFullPage){\n\n            // allow normal scrolling, but quitting\n            if(!pauseScroll){\n                return true;\n            }\n        }   \n    }\n}\n\nvar keyframeTime = (function(){\n    let isNew = false;\n    var frames = {};\n    var timeframes = {};\n\n    return function(action, name, timeframe){\n        switch(action){\n            case 'set':\n                frames[name] = new Date().getTime();\n                timeframes[name] = timeframe;\n                break;\n            case 'isNewKeyframe':\n                const current = new Date().getTime();\n                isNew = current - frames[name] > timeframes[name];\n                break;\n        }\n\n        return isNew;\n    };\n})();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}