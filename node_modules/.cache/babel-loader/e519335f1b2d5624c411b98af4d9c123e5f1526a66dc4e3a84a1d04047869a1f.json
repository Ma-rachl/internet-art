{"ast":null,"code":"import * as utils from './common/utils.js';\nimport { getOptions, getContainer, getOriginals } from './common/options.js';\nimport { setAutoScrolling } from './autoScrolling.js';\nimport { setFitToSection } from './fitToSection.js';\nimport { FP, win } from './common/constants.js';\nimport { $body } from './common/cache.js';\nimport { SECTION_NAV_SEL, RESPONSIVE } from './common/selectors.js';\nFP.setResponsive = setResponsive;\n\n/**\n* Checks if the site needs to get responsive and disables autoScrolling if so.\n* A class `fp-responsive` is added to the plugin's container in case the user wants to use it for his own responsive CSS.\n*/\nexport function responsive() {\n  var widthLimit = getOptions().responsive || getOptions().responsiveWidth; //backwards compatiblity\n  var heightLimit = getOptions().responsiveHeight;\n\n  //only calculating what we need. Remember its called on the resize event.\n  var isBreakingPointWidth = widthLimit && win.innerWidth < widthLimit;\n  var isBreakingPointHeight = heightLimit && win.innerHeight < heightLimit;\n  if (widthLimit && heightLimit) {\n    setResponsive(isBreakingPointWidth || isBreakingPointHeight);\n  } else if (widthLimit) {\n    setResponsive(isBreakingPointWidth);\n  } else if (heightLimit) {\n    setResponsive(isBreakingPointHeight);\n  }\n}\n\n/**\n* Turns fullPage.js to normal scrolling mode when the viewport `width` or `height`\n* are smaller than the set limit values.\n*/\nfunction setResponsive(active) {\n  var isResponsive = isResponsiveMode();\n  if (active) {\n    if (!isResponsive) {\n      setAutoScrolling(false, 'internal');\n      setFitToSection(false, 'internal');\n      utils.hide(utils.$(SECTION_NAV_SEL));\n      utils.addClass($body, RESPONSIVE);\n      if (utils.isFunction(getOptions().afterResponsive)) {\n        getOptions().afterResponsive.call(getContainer(), active);\n      }\n    }\n  } else if (isResponsive) {\n    setAutoScrolling(getOriginals().autoScrolling, 'internal');\n    setFitToSection(getOriginals().autoScrolling, 'internal');\n    utils.show(utils.$(SECTION_NAV_SEL));\n    utils.removeClass($body, RESPONSIVE);\n    if (utils.isFunction(getOptions().afterResponsive)) {\n      getOptions().afterResponsive.call(getContainer(), active);\n    }\n  }\n}\n\n/**\n* Determines whether fullpage.js is in responsive mode or not.\n*/\nexport function isResponsiveMode() {\n  return utils.hasClass($body, RESPONSIVE);\n}","map":{"version":3,"names":["utils","getOptions","getContainer","getOriginals","setAutoScrolling","setFitToSection","FP","win","$body","SECTION_NAV_SEL","RESPONSIVE","setResponsive","responsive","widthLimit","responsiveWidth","heightLimit","responsiveHeight","isBreakingPointWidth","innerWidth","isBreakingPointHeight","innerHeight","active","isResponsive","isResponsiveMode","hide","$","addClass","isFunction","afterResponsive","call","autoScrolling","show","removeClass","hasClass"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/responsive.js"],"sourcesContent":["import * as utils from './common/utils.js';\nimport { getOptions, getContainer, getOriginals} from './common/options.js';\nimport { setAutoScrolling } from './autoScrolling.js';\nimport { setFitToSection } from './fitToSection.js';\nimport { FP, win } from './common/constants.js';\nimport { $body } from './common/cache.js';\nimport { \n    SECTION_NAV_SEL,\n    RESPONSIVE\n} from './common/selectors.js';\n\nFP.setResponsive = setResponsive;\n\n\n/**\n* Checks if the site needs to get responsive and disables autoScrolling if so.\n* A class `fp-responsive` is added to the plugin's container in case the user wants to use it for his own responsive CSS.\n*/\nexport function responsive(){\n    var widthLimit = getOptions().responsive || getOptions().responsiveWidth; //backwards compatiblity\n    var heightLimit = getOptions().responsiveHeight;\n\n    //only calculating what we need. Remember its called on the resize event.\n    var isBreakingPointWidth = widthLimit && win.innerWidth < widthLimit;\n    var isBreakingPointHeight = heightLimit && win.innerHeight < heightLimit;\n\n    if(widthLimit && heightLimit){\n        setResponsive(isBreakingPointWidth || isBreakingPointHeight);\n    }\n    else if(widthLimit){\n        setResponsive(isBreakingPointWidth);\n    }\n    else if(heightLimit){\n        setResponsive(isBreakingPointHeight);\n    }\n}\n\n/**\n* Turns fullPage.js to normal scrolling mode when the viewport `width` or `height`\n* are smaller than the set limit values.\n*/\nfunction setResponsive(active){\n    var isResponsive = isResponsiveMode();\n\n    if(active){\n        if(!isResponsive){\n            setAutoScrolling(false, 'internal');\n            setFitToSection(false, 'internal');\n            utils.hide(utils.$(SECTION_NAV_SEL));\n            utils.addClass($body, RESPONSIVE);\n            if(utils.isFunction( getOptions().afterResponsive )){\n                getOptions().afterResponsive.call( getContainer(), active);\n            }            \n        }\n    }\n    else if(isResponsive){\n        setAutoScrolling(getOriginals().autoScrolling, 'internal');\n        setFitToSection(getOriginals().autoScrolling, 'internal');\n        utils.show(utils.$(SECTION_NAV_SEL));\n        utils.removeClass($body, RESPONSIVE);\n        if(utils.isFunction( getOptions().afterResponsive )){\n            getOptions().afterResponsive.call( getContainer(), active);\n        }\n    }\n}\n\n/**\n* Determines whether fullpage.js is in responsive mode or not.\n*/\nexport function isResponsiveMode(){\n    return utils.hasClass($body, RESPONSIVE);\n}\n "],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,mBAAmB;AAC1C,SAASC,UAAU,EAAEC,YAAY,EAAEC,YAAY,QAAO,qBAAqB;AAC3E,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,EAAE,EAAEC,GAAG,QAAQ,uBAAuB;AAC/C,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SACIC,eAAe,EACfC,UAAU,QACP,uBAAuB;AAE9BJ,EAAE,CAACK,aAAa,GAAGA,aAAa;;AAGhC;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAA,EAAE;EACxB,IAAIC,UAAU,GAAGZ,UAAU,CAAC,CAAC,CAACW,UAAU,IAAIX,UAAU,CAAC,CAAC,CAACa,eAAe,CAAC,CAAC;EAC1E,IAAIC,WAAW,GAAGd,UAAU,CAAC,CAAC,CAACe,gBAAgB;;EAE/C;EACA,IAAIC,oBAAoB,GAAGJ,UAAU,IAAIN,GAAG,CAACW,UAAU,GAAGL,UAAU;EACpE,IAAIM,qBAAqB,GAAGJ,WAAW,IAAIR,GAAG,CAACa,WAAW,GAAGL,WAAW;EAExE,IAAGF,UAAU,IAAIE,WAAW,EAAC;IACzBJ,aAAa,CAACM,oBAAoB,IAAIE,qBAAqB,CAAC;EAChE,CAAC,MACI,IAAGN,UAAU,EAAC;IACfF,aAAa,CAACM,oBAAoB,CAAC;EACvC,CAAC,MACI,IAAGF,WAAW,EAAC;IAChBJ,aAAa,CAACQ,qBAAqB,CAAC;EACxC;AACJ;;AAEA;AACA;AACA;AACA;AACA,SAASR,aAAaA,CAACU,MAAM,EAAC;EAC1B,IAAIC,YAAY,GAAGC,gBAAgB,CAAC,CAAC;EAErC,IAAGF,MAAM,EAAC;IACN,IAAG,CAACC,YAAY,EAAC;MACblB,gBAAgB,CAAC,KAAK,EAAE,UAAU,CAAC;MACnCC,eAAe,CAAC,KAAK,EAAE,UAAU,CAAC;MAClCL,KAAK,CAACwB,IAAI,CAACxB,KAAK,CAACyB,CAAC,CAAChB,eAAe,CAAC,CAAC;MACpCT,KAAK,CAAC0B,QAAQ,CAAClB,KAAK,EAAEE,UAAU,CAAC;MACjC,IAAGV,KAAK,CAAC2B,UAAU,CAAE1B,UAAU,CAAC,CAAC,CAAC2B,eAAgB,CAAC,EAAC;QAChD3B,UAAU,CAAC,CAAC,CAAC2B,eAAe,CAACC,IAAI,CAAE3B,YAAY,CAAC,CAAC,EAAEmB,MAAM,CAAC;MAC9D;IACJ;EACJ,CAAC,MACI,IAAGC,YAAY,EAAC;IACjBlB,gBAAgB,CAACD,YAAY,CAAC,CAAC,CAAC2B,aAAa,EAAE,UAAU,CAAC;IAC1DzB,eAAe,CAACF,YAAY,CAAC,CAAC,CAAC2B,aAAa,EAAE,UAAU,CAAC;IACzD9B,KAAK,CAAC+B,IAAI,CAAC/B,KAAK,CAACyB,CAAC,CAAChB,eAAe,CAAC,CAAC;IACpCT,KAAK,CAACgC,WAAW,CAACxB,KAAK,EAAEE,UAAU,CAAC;IACpC,IAAGV,KAAK,CAAC2B,UAAU,CAAE1B,UAAU,CAAC,CAAC,CAAC2B,eAAgB,CAAC,EAAC;MAChD3B,UAAU,CAAC,CAAC,CAAC2B,eAAe,CAACC,IAAI,CAAE3B,YAAY,CAAC,CAAC,EAAEmB,MAAM,CAAC;IAC9D;EACJ;AACJ;;AAEA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAAA,EAAE;EAC9B,OAAOvB,KAAK,CAACiC,QAAQ,CAACzB,KAAK,EAAEE,UAAU,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}