{"ast":null,"code":"import * as utils from './common/utils.js';\nimport { getOptions, getContainer } from './common/options.js';\nimport { updateState } from './stateUpdates.js';\nimport { getState, state, setState } from './common/state.js';\nimport { responsive } from './responsive.js';\nimport { isTouchDevice, FP, win, doc } from './common/constants.js';\nimport { landscapeScroll } from './slides/landscapeScroll.js';\nimport { scrollOverflowHandler } from './scrolloverflow.js';\nimport { SLIDES_WRAPPER_SEL, DESTROYED } from './common/selectors.js';\nimport { EventEmitter } from './common/eventEmitter.js';\nimport { silentMoveTo } from './scroll/silentMove.js';\nimport { events } from './common/events.js';\nlet previousHeight = utils.getWindowHeight();\nlet windowsWidth = utils.getWindowWidth();\nlet g_resizeId;\nlet g_isConsecutiveResize = false;\nlet g_resizeMobileHandlerId;\nFP.reBuild = reBuild;\nEventEmitter.on(events.bindEvents, bindEvents);\nfunction bindEvents() {\n  // Setting VH correctly in mobile devices\n  resizeHandler();\n\n  //when resizing the site, we adjust the heights of the sections, slimScroll...\n  utils.windowAddEvent('resize', resizeHandler);\n  EventEmitter.on(events.onDestroy, onDestroy);\n}\nfunction onDestroy() {\n  clearTimeout(g_resizeId);\n  clearTimeout(g_resizeMobileHandlerId);\n  utils.windowRemoveEvent('resize', resizeHandler);\n}\n\n/*\n* Resize event handler.\n*/\nfunction resizeHandler() {\n  if (!g_isConsecutiveResize) {\n    if (getOptions().autoScrolling && !getOptions().scrollBar || !getOptions().fitToSection) {\n      setSectionsHeight(utils.getWindowHeight());\n    }\n  }\n  fitToActiveSection();\n  g_isConsecutiveResize = true;\n\n  //in order to call the functions only when the resize is finished\n  //http://stackoverflow.com/questions/4298612/jquery-how-to-call-resize-event-only-once-its-finished-resizing    \n  clearTimeout(g_resizeId);\n  g_resizeId = setTimeout(function () {\n    //issue #3336 \n    //(some apps or browsers, like Chrome/Firefox for Mobile take time to report the real height)\n    //so we check it 3 times with intervals in that case\n    // for(var i = 0; i< 4; i++){\n    resizeActions();\n    g_isConsecutiveResize = false;\n    // }\n  }, 400);\n}\nfunction fitToActiveSection() {\n  if (isTouchDevice) {\n    // Issue #4393 and previously in v3, #3336\n    // (some apps or browsers, like Chrome/Firefox will delay a bit to scroll \n    // to the focused input\n    for (var i = 0; i < 4; i++) {\n      g_resizeMobileHandlerId = setTimeout(function () {\n        window.requestAnimationFrame(function () {\n          // on Android devices the browser scrolls to the focused element\n          // messing up the whole page structure. So we need to update the\n          // translate3d value when the keyboard shows/hides\n          if (getOptions().autoScrolling && !getOptions().scrollBar) {\n            setState({\n              isResizing: true\n            });\n            silentMoveTo(state.activeSection.index() + 1);\n            setState({\n              isResizing: false\n            });\n          }\n        });\n      }, 200 * i);\n    }\n  }\n}\n\n/**\n* When resizing the site, we adjust the heights of the sections, slimScroll...\n*/\nfunction resizeActions() {\n  setState({\n    isResizing: true\n  });\n  setSectionsHeight('');\n  if (!getOptions().autoScrolling && !state.isBeyondFullpage) {\n    setVhUnits();\n  }\n  EventEmitter.emit(events.contentChanged);\n  updateState();\n\n  //checking if it needs to get responsive\n  responsive();\n\n  // rebuild immediately on touch devices\n  if (isTouchDevice) {\n    var activeElement = doc.activeElement;\n\n    //if the keyboard is NOT visible\n    if (!utils.matches(activeElement, 'textarea') && !utils.matches(activeElement, 'input') && !utils.matches(activeElement, 'select')) {\n      var currentHeight = utils.getWindowHeight();\n      //making sure the change in the viewport size is enough to force a rebuild. (20 % of the window to avoid problems when hidding scroll bars)\n      if (Math.abs(currentHeight - previousHeight) > 20 * Math.max(previousHeight, currentHeight) / 100) {\n        reBuild(true);\n        previousHeight = currentHeight;\n      }\n    }\n  } else {\n    adjustToNewViewport();\n  }\n  setState({\n    isResizing: false\n  });\n}\n\n/**\n * When resizing is finished, we adjust the slides sizes and positions\n */\nfunction reBuild(resizing) {\n  if (utils.hasClass(getContainer(), DESTROYED)) {\n    return;\n  } //nothing to do if the plugin was destroyed\n\n  //updating global vars\n  setState({\n    isResizing: true,\n    windowsHeight: utils.getWindowHeight(),\n    windowsWidth: utils.getWindowWidth()\n  });\n  var sections = getState().sections;\n  for (var i = 0; i < sections.length; ++i) {\n    var section = sections[i];\n    var slidesWrap = utils.$(SLIDES_WRAPPER_SEL, section.item)[0];\n    var slides = section.slides;\n\n    //adjusting the position fo the FULL WIDTH slides...\n    if (slides.length > 1) {\n      landscapeScroll(slidesWrap, section.activeSlide.item);\n    }\n  }\n  if (getOptions().scrollOverflow) {\n    scrollOverflowHandler.makeScrollable();\n  }\n  var sectionIndex = getState().activeSection.index();\n  if (!state.isBeyondFullpage) {\n    //isn't it the first section?\n    if (sectionIndex) {\n      //adjusting the position for the current section\n      silentMoveTo(sectionIndex + 1);\n    }\n  }\n  setState({\n    isResizing: false\n  });\n  if (utils.isFunction(getOptions().afterResize) && resizing) {\n    getOptions().afterResize.call(getContainer(), win.innerWidth, win.innerHeight);\n  }\n  if (utils.isFunction(getOptions().afterReBuild) && !resizing) {\n    getOptions().afterReBuild.call(getContainer());\n  }\n  utils.trigger(getContainer(), 'afterRebuild');\n}\n\n/**\n* Adjusts a section to the viewport if it has changed.\n*/\nfunction adjustToNewViewport() {\n  var newWindowHeight = utils.getWindowHeight();\n  var newWindowWidth = utils.getWindowWidth();\n  if (state.windowsHeight !== newWindowHeight || windowsWidth !== newWindowWidth) {\n    setState({\n      windowsHeight: newWindowHeight\n    });\n    windowsWidth = newWindowWidth;\n    reBuild(true);\n  }\n}\nfunction setSectionsHeight(value) {\n  var propertyValue = value === '' ? '' : value + 'px';\n  getState().sections.forEach(function (section) {\n    utils.css(section.item, {\n      'height': propertyValue\n    });\n  });\n}\n\n/**\n * Defining the value in px of a VH unit. (Used for autoScrolling: false)\n * To fix the height issue on mobile devices when using VH units.\n * https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n */\nfunction setVhUnits() {\n  if (!getOptions().autoScrolling || getOptions().scrollBar) {\n    // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n    let vh = win.innerHeight * 0.01;\n\n    // Then we set the value in the --vh custom property to the root of the document\n    doc.documentElement.style.setProperty('--vh', `${vh}px`);\n  }\n}","map":{"version":3,"names":["utils","getOptions","getContainer","updateState","getState","state","setState","responsive","isTouchDevice","FP","win","doc","landscapeScroll","scrollOverflowHandler","SLIDES_WRAPPER_SEL","DESTROYED","EventEmitter","silentMoveTo","events","previousHeight","getWindowHeight","windowsWidth","getWindowWidth","g_resizeId","g_isConsecutiveResize","g_resizeMobileHandlerId","reBuild","on","bindEvents","resizeHandler","windowAddEvent","onDestroy","clearTimeout","windowRemoveEvent","autoScrolling","scrollBar","fitToSection","setSectionsHeight","fitToActiveSection","setTimeout","resizeActions","i","window","requestAnimationFrame","isResizing","activeSection","index","isBeyondFullpage","setVhUnits","emit","contentChanged","activeElement","matches","currentHeight","Math","abs","max","adjustToNewViewport","resizing","hasClass","windowsHeight","sections","length","section","slidesWrap","$","item","slides","activeSlide","scrollOverflow","makeScrollable","sectionIndex","isFunction","afterResize","call","innerWidth","innerHeight","afterReBuild","trigger","newWindowHeight","newWindowWidth","value","propertyValue","forEach","css","vh","documentElement","style","setProperty"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/resize.js"],"sourcesContent":["import * as utils from './common/utils.js';\nimport { getOptions, getContainer } from './common/options.js';\nimport { updateState } from './stateUpdates.js';\nimport { getState, state, setState } from './common/state.js';\nimport { responsive } from './responsive.js';\nimport { isTouchDevice, FP, win, doc }  from './common/constants.js';\nimport { landscapeScroll } from './slides/landscapeScroll.js';\nimport { scrollOverflowHandler } from './scrolloverflow.js';\nimport { \n    SLIDES_WRAPPER_SEL,\n    DESTROYED\n} from './common/selectors.js';\nimport { EventEmitter } from './common/eventEmitter.js';\nimport { silentMoveTo } from './scroll/silentMove.js';\nimport { events } from './common/events.js';\n\nlet previousHeight = utils.getWindowHeight();\nlet windowsWidth = utils.getWindowWidth();\nlet g_resizeId;\nlet g_isConsecutiveResize = false;\nlet g_resizeMobileHandlerId;\nFP.reBuild = reBuild;\n\nEventEmitter.on(events.bindEvents, bindEvents);\n\nfunction bindEvents(){\n\n    // Setting VH correctly in mobile devices\n    resizeHandler();\n\n    //when resizing the site, we adjust the heights of the sections, slimScroll...\n    utils.windowAddEvent('resize', resizeHandler);\n    EventEmitter.on(events.onDestroy, onDestroy);\n}\n\nfunction onDestroy(){\n    clearTimeout(g_resizeId);\n    clearTimeout(g_resizeMobileHandlerId);\n    utils.windowRemoveEvent('resize', resizeHandler);\n}\n\n/*\n* Resize event handler.\n*/        \nfunction resizeHandler(){\n    if(!g_isConsecutiveResize){\n        if(getOptions().autoScrolling && !getOptions().scrollBar || !getOptions().fitToSection){\n            setSectionsHeight(utils.getWindowHeight());\n        }\n    }\n\n    fitToActiveSection();\n\n    g_isConsecutiveResize = true;\n\n    //in order to call the functions only when the resize is finished\n    //http://stackoverflow.com/questions/4298612/jquery-how-to-call-resize-event-only-once-its-finished-resizing    \n    clearTimeout(g_resizeId);\n    g_resizeId = setTimeout(function(){\n\n        //issue #3336 \n        //(some apps or browsers, like Chrome/Firefox for Mobile take time to report the real height)\n        //so we check it 3 times with intervals in that case\n        // for(var i = 0; i< 4; i++){\n            resizeActions();\n            g_isConsecutiveResize = false;\n        // }\n    }, 400);\n}\n\nfunction fitToActiveSection(){\n\n    if (isTouchDevice) {\n\n        // Issue #4393 and previously in v3, #3336\n        // (some apps or browsers, like Chrome/Firefox will delay a bit to scroll \n        // to the focused input\n        for(var i = 0; i< 4; i++){\n            g_resizeMobileHandlerId = setTimeout(function(){\n                window.requestAnimationFrame(function(){\n                    \n                    // on Android devices the browser scrolls to the focused element\n                    // messing up the whole page structure. So we need to update the\n                    // translate3d value when the keyboard shows/hides\n                    if(getOptions().autoScrolling && !getOptions().scrollBar){\n                        setState({isResizing: true});\n                        silentMoveTo(state.activeSection.index() + 1);\n                        setState({isResizing: false});\n                    }\n                });\n            }, 200 * i);\n        }\n    }\n}\n\n\n/**\n* When resizing the site, we adjust the heights of the sections, slimScroll...\n*/\nfunction resizeActions(){\n    setState({isResizing: true});\n\n    setSectionsHeight('');\n\n    if(!getOptions().autoScrolling && !state.isBeyondFullpage){\n        setVhUnits();\n    }\n\n    EventEmitter.emit(events.contentChanged);\n    updateState();\n\n    //checking if it needs to get responsive\n    responsive();\n\n    // rebuild immediately on touch devices\n    if (isTouchDevice) {\n        var activeElement = doc.activeElement;\n\n        //if the keyboard is NOT visible\n        if (!utils.matches(activeElement, 'textarea') && !utils.matches(activeElement, 'input') && !utils.matches(activeElement, 'select')) {\n            var currentHeight = utils.getWindowHeight();\n            //making sure the change in the viewport size is enough to force a rebuild. (20 % of the window to avoid problems when hidding scroll bars)\n            if( Math.abs(currentHeight - previousHeight) > (20 * Math.max(previousHeight, currentHeight) / 100) ){\n                reBuild(true);\n                previousHeight = currentHeight;\n            }\n        }\n    }\n    else{\n        adjustToNewViewport();\n    }\n\n    setState({isResizing: false});\n}\n\n/**\n * When resizing is finished, we adjust the slides sizes and positions\n */\nfunction reBuild(resizing){\n    if(utils.hasClass(getContainer(), DESTROYED)){ return; }  //nothing to do if the plugin was destroyed\n\n    //updating global vars\n    setState({\n        isResizing: true,\n        windowsHeight: utils.getWindowHeight(),\n        windowsWidth: utils.getWindowWidth()\n    });\n\n    var sections = getState().sections;\n    for (var i = 0; i < sections.length; ++i) {\n        var section = sections[i];\n        var slidesWrap = utils.$(SLIDES_WRAPPER_SEL, section.item)[0];\n        var slides = section.slides;\n\n        //adjusting the position fo the FULL WIDTH slides...\n        if (slides.length > 1) {\n            landscapeScroll(slidesWrap, section.activeSlide.item);\n        }\n    }\n\n    if(getOptions().scrollOverflow){\n        scrollOverflowHandler.makeScrollable();\n    }\n\n    var sectionIndex = getState().activeSection.index();\n\n    if(!state.isBeyondFullpage){\n        //isn't it the first section?\n        if(sectionIndex){\n            //adjusting the position for the current section\n            silentMoveTo(sectionIndex + 1);\n        }\n    }\n\n    setState({isResizing: false});\n\n    if(utils.isFunction( getOptions().afterResize ) && resizing){\n        getOptions().afterResize.call(getContainer(), win.innerWidth, win.innerHeight);\n    }\n    if(utils.isFunction( getOptions().afterReBuild ) && !resizing){\n        getOptions().afterReBuild.call(getContainer());\n    }\n\n    utils.trigger(getContainer(), 'afterRebuild');\n}\n\n/**\n* Adjusts a section to the viewport if it has changed.\n*/\nfunction adjustToNewViewport(){\n    var newWindowHeight = utils.getWindowHeight();\n    var newWindowWidth = utils.getWindowWidth();\n\n    if(state.windowsHeight !== newWindowHeight || windowsWidth !== newWindowWidth){\n        setState({windowsHeight: newWindowHeight});\n        windowsWidth = newWindowWidth;\n        reBuild(true);\n    }\n}\n\nfunction setSectionsHeight(value){\n    var propertyValue = value === '' ? '' : value + 'px';\n    getState().sections.forEach(function(section){\n        utils.css(section.item, {\n            'height': propertyValue\n        });\n    });\n}\n\n/**\n * Defining the value in px of a VH unit. (Used for autoScrolling: false)\n * To fix the height issue on mobile devices when using VH units.\n * https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n */\nfunction setVhUnits(){\n    if(!getOptions().autoScrolling || getOptions().scrollBar){\n        // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n        let vh = win.innerHeight * 0.01;\n\n        // Then we set the value in the --vh custom property to the root of the document\n        doc.documentElement.style.setProperty('--vh', `${vh}px`);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}