{"ast":null,"code":"import * as utils from './common/utils.js';\nimport { getOptions, getContainer, setVariableState } from './common/options.js';\nimport { getPanelByElement, Item } from './common/item.js';\nimport { ACTIVE, OVERFLOW } from './common/selectors.js';\nimport { getState, state } from './common/state.js';\nimport { silentScroll } from './common/silentScroll.js';\nimport { silentLandscapeScroll } from './slides/silentLandscapeScroll.js';\nimport { scrollOverflowHandler } from './scrolloverflow.js';\nlet g_prevActiveSectionIndex = null;\nlet g_prevActiveSlideIndex = null;\n\n/** \n * Updates the state of the app.\n */\nexport function updateState() {\n  state.activeSection = null;\n  state.sections.map(function (section) {\n    let isActive = utils.hasClass(section.item, ACTIVE);\n    section.isActive = isActive;\n    section.hasScroll = scrollOverflowHandler.hasScroll(section.item);\n    if (isActive) {\n      state.activeSection = section;\n    }\n    if (section.slides.length) {\n      section.activeSlide = null;\n      section.slides.map(function (slide) {\n        let isActiveSlide = utils.hasClass(slide.item, ACTIVE);\n        slide.hasScroll = scrollOverflowHandler.hasScroll(section.item);\n        slide.isActive = isActiveSlide;\n        if (isActiveSlide) {\n          section.activeSlide = slide;\n        }\n      });\n    }\n  });\n  scrollToNewActivePanel();\n}\nexport function updateStructuralState() {\n  var allSectionItems = utils.$(getOptions().sectionSelector, getContainer());\n  var sectionsItems = utils.getVisible(allSectionItems);\n  var allSections = Array.from(allSectionItems).map(item => new SectionPanel(item));\n  var sections = allSections.filter(item => item.isVisible);\n  var slides = sections.reduce(function (acc, section) {\n    return acc.concat(section.slides);\n  }, []);\n\n  // keeping track of the previously active section\n  g_prevActiveSectionIndex = getPrevActivePanelIndex(state.activeSection);\n  g_prevActiveSlideIndex = getPrevActivePanelIndex(state.activeSection ? state.activeSection.activeSlide : null);\n  state.numSections = sectionsItems.length;\n  state.numSlides = sections.reduce(function (acc, section) {\n    return acc + section.slides.length;\n  }, 0);\n  state.sections = sections;\n  state.sectionsIncludingHidden = allSections;\n  state.slides = slides;\n  state.panels = state.sections.concat(state.slides);\n}\nfunction getPrevActivePanelIndex(activePanel) {\n  if (!activePanel) {\n    return null;\n  }\n  var prevActivePanelItem = activePanel ? activePanel.item : null;\n  var hiddenPanels = activePanel.isSection ? state.sectionsIncludingHidden : state.activeSection.slidesIncludingHidden;\n  if (prevActivePanelItem) {\n    let panel = getPanelByElement(hiddenPanels, prevActivePanelItem);\n    return panel ? panel.index() : null;\n  }\n  return null;\n}\n\n/**\n * When changes in the DOM take place there's a change \n * the active section is now hidden or removed. \n * fullPage.js will scroll to the closest section nearby.\n */\nfunction scrollToNewActivePanel() {\n  var activeSection = state.activeSection;\n  var activeSectionHasSlides = state.activeSection ? state.activeSection.slides.length : false;\n  var activeSlide = state.activeSection ? state.activeSection.activeSlide : null;\n\n  // Hidding / removing the active section ?\n  if (!activeSection && state.sections.length && !getState().isBeyondFullpage && g_prevActiveSectionIndex) {\n    var newActiveSection = getNewActivePanel(g_prevActiveSectionIndex, state.sections);\n    if (newActiveSection) {\n      state.activeSection = newActiveSection;\n      state.activeSection.isActive = true;\n      utils.addClass(state.activeSection.item, ACTIVE);\n    }\n    if (state.activeSection) {\n      silentScroll(state.activeSection.item.offsetTop);\n    }\n  }\n  if (activeSectionHasSlides && !activeSlide && g_prevActiveSlideIndex) {\n    var newActiveSlide = getNewActivePanel(g_prevActiveSlideIndex, state.activeSection.slides);\n    if (newActiveSlide) {\n      state.activeSection.activeSlide = newActiveSlide;\n      state.activeSection.activeSlide.isActive = true;\n      utils.addClass(state.activeSection.activeSlide.item, ACTIVE);\n    }\n    if (state.activeSection.activeSlide) {\n      silentLandscapeScroll(state.activeSection.activeSlide.item, 'internal');\n    }\n  }\n}\nfunction getNewActivePanel(prevActivePanelIndex, siblings) {\n  let newActiveSection;\n  let prevIndex = prevActivePanelIndex - 1;\n  let nextIndex = prevActivePanelIndex;\n  do {\n    newActiveSection = siblings[prevIndex] || siblings[nextIndex];\n    if (newActiveSection) {\n      break;\n    }\n    prevIndex = prevIndex - 1;\n    nextIndex = nextIndex + 1;\n  } while (prevIndex >= 0 || nextIndex < siblings.length);\n  return newActiveSection;\n}\n\n/**\n* Section object\n*/\nexport let SectionPanel = function (el) {\n  [].push.call(arguments, getOptions().sectionSelector);\n  Item.apply(this, arguments);\n  this.allSlidesItems = utils.$(getOptions().slideSelector, el);\n  this.slidesIncludingHidden = Array.from(this.allSlidesItems).map(item => new SlidePanel(item, this));\n  this.slides = this.slidesIncludingHidden.filter(slidePanel => slidePanel.isVisible);\n  this.activeSlide = this.slides.length ? this.slides.filter(slide => slide.isActive)[0] || this.slides[0] : null;\n};\n_c = SectionPanel;\nSectionPanel.prototype = Item.prototype;\nSectionPanel.prototype.constructor = SectionPanel;\n\n/**\n* Slide object\n*/\nlet SlidePanel = function (el, section) {\n  this.parent = section;\n  Item.call(this, el, getOptions().slideSelector);\n};\n_c2 = SlidePanel;\nSlidePanel.prototype = Item.prototype;\nSlidePanel.prototype.constructor = SectionPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"SectionPanel\");\n$RefreshReg$(_c2, \"SlidePanel\");","map":{"version":3,"names":["utils","getOptions","getContainer","setVariableState","getPanelByElement","Item","ACTIVE","OVERFLOW","getState","state","silentScroll","silentLandscapeScroll","scrollOverflowHandler","g_prevActiveSectionIndex","g_prevActiveSlideIndex","updateState","activeSection","sections","map","section","isActive","hasClass","item","hasScroll","slides","length","activeSlide","slide","isActiveSlide","scrollToNewActivePanel","updateStructuralState","allSectionItems","$","sectionSelector","sectionsItems","getVisible","allSections","Array","from","SectionPanel","filter","isVisible","reduce","acc","concat","getPrevActivePanelIndex","numSections","numSlides","sectionsIncludingHidden","panels","activePanel","prevActivePanelItem","hiddenPanels","isSection","slidesIncludingHidden","panel","index","activeSectionHasSlides","isBeyondFullpage","newActiveSection","getNewActivePanel","addClass","offsetTop","newActiveSlide","prevActivePanelIndex","siblings","prevIndex","nextIndex","el","push","call","arguments","apply","allSlidesItems","slideSelector","SlidePanel","slidePanel","_c","prototype","constructor","parent","_c2","$RefreshReg$"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/stateUpdates.js"],"sourcesContent":["import * as utils from './common/utils.js';\nimport { getOptions, getContainer, setVariableState } from './common/options.js';\nimport { getPanelByElement, Item } from './common/item.js';\nimport { ACTIVE, OVERFLOW } from './common/selectors.js';\nimport { getState, state } from './common/state.js';\nimport { silentScroll } from './common/silentScroll.js';\nimport { silentLandscapeScroll } from './slides/silentLandscapeScroll.js';\nimport { scrollOverflowHandler } from './scrolloverflow.js';\n\nlet g_prevActiveSectionIndex = null;\nlet g_prevActiveSlideIndex = null;\n\n/** \n * Updates the state of the app.\n */\nexport function updateState(){\n\n    state.activeSection = null;\n    state.sections.map(function(section){\n        let isActive = utils.hasClass(section.item, ACTIVE);\n        section.isActive = isActive;\n        section.hasScroll = scrollOverflowHandler.hasScroll(section.item);\n        if(isActive){\n            state.activeSection = section;\n        }\n\n        if(section.slides.length){\n            section.activeSlide = null;\n            section.slides.map(function(slide){\n                let isActiveSlide = utils.hasClass(slide.item, ACTIVE);\n                slide.hasScroll = scrollOverflowHandler.hasScroll(section.item);\n                slide.isActive = isActiveSlide;\n                if(isActiveSlide){\n                    section.activeSlide = slide;\n                }\n            });\n        }\n    });\n\n    scrollToNewActivePanel();\n}\n\nexport function updateStructuralState(){\n    var allSectionItems = utils.$(getOptions().sectionSelector, getContainer());\n    var sectionsItems = utils.getVisible(allSectionItems);\n    var allSections = Array.from(allSectionItems).map( item => new SectionPanel(item));\n    var sections = allSections.filter( item => item.isVisible);\n    var slides = sections.reduce(function(acc, section){\n        return acc.concat(section.slides);\n    }, []);\n\n    // keeping track of the previously active section\n    g_prevActiveSectionIndex = getPrevActivePanelIndex(state.activeSection);\n    g_prevActiveSlideIndex = getPrevActivePanelIndex(state.activeSection ? state.activeSection.activeSlide : null);\n\n    state.numSections = sectionsItems.length;\n    state.numSlides = sections.reduce( function(acc, section){\n        return acc + section.slides.length;\n    }, 0);\n    state.sections = sections;\n\n    state.sectionsIncludingHidden = allSections;\n    state.slides = slides;\n    state.panels = state.sections.concat(state.slides);\n}\n\nfunction getPrevActivePanelIndex(activePanel){\n    if(!activePanel){\n        return null;\n    }\n    var prevActivePanelItem = activePanel ? activePanel.item : null;\n    var hiddenPanels = activePanel.isSection ? state.sectionsIncludingHidden : state.activeSection.slidesIncludingHidden;\n    if(prevActivePanelItem){\n        let panel = getPanelByElement(hiddenPanels, prevActivePanelItem);\n        return panel ? panel.index() : null;\n    }\n    return null;\n}\n\n/**\n * When changes in the DOM take place there's a change \n * the active section is now hidden or removed. \n * fullPage.js will scroll to the closest section nearby.\n */\nfunction scrollToNewActivePanel(){\n    var activeSection = state.activeSection;\n    var activeSectionHasSlides = state.activeSection ? state.activeSection.slides.length : false;\n    var activeSlide = state.activeSection ? state.activeSection.activeSlide : null;\n\n    // Hidding / removing the active section ?\n    if(!activeSection && state.sections.length && !getState().isBeyondFullpage && g_prevActiveSectionIndex){\n        var newActiveSection = getNewActivePanel(g_prevActiveSectionIndex, state.sections);\n        if(newActiveSection){\n            state.activeSection = newActiveSection;\n            state.activeSection.isActive = true;\n            utils.addClass(state.activeSection.item, ACTIVE);\n        }\n        if(state.activeSection){\n            silentScroll(state.activeSection.item.offsetTop);\n        }\n    }\n    if(activeSectionHasSlides && !activeSlide && g_prevActiveSlideIndex){\n        var newActiveSlide = getNewActivePanel(g_prevActiveSlideIndex, state.activeSection.slides);\n        if(newActiveSlide){\n            state.activeSection.activeSlide = newActiveSlide;\n            state.activeSection.activeSlide.isActive = true;\n            utils.addClass(state.activeSection.activeSlide.item, ACTIVE);\n        }\n        if(state.activeSection.activeSlide){\n            silentLandscapeScroll(state.activeSection.activeSlide.item, 'internal');\n        }\n    }\n}\n\nfunction getNewActivePanel(prevActivePanelIndex, siblings){\n    let newActiveSection;\n    let prevIndex = prevActivePanelIndex -1;\n    let nextIndex = prevActivePanelIndex;\n    do{\n        newActiveSection = siblings[prevIndex] || siblings[nextIndex];\n        if(newActiveSection){\n            break;\n        }\n        prevIndex = prevIndex - 1;\n        nextIndex = nextIndex + 1;\n    }while(prevIndex >= 0 || nextIndex < siblings.length);\n\n    return newActiveSection;\n}\n\n/**\n* Section object\n*/\nexport let SectionPanel = function(el){\n    [].push.call(arguments, getOptions().sectionSelector);\n    Item.apply(this, arguments);\n\n    this.allSlidesItems = utils.$(getOptions().slideSelector, el);\n    this.slidesIncludingHidden = Array.from(this.allSlidesItems).map( item => new SlidePanel(item, this));\n    this.slides = this.slidesIncludingHidden.filter(slidePanel => slidePanel.isVisible);\n    this.activeSlide = this.slides.length ? this.slides.filter(slide => slide.isActive)[0] || this.slides[0]: null;\n};\nSectionPanel.prototype = Item.prototype;\nSectionPanel.prototype.constructor = SectionPanel;\n\n\n\n/**\n* Slide object\n*/\nlet SlidePanel = function(el, section){\n    this.parent = section;\n    Item.call(this, el, getOptions().slideSelector);\n};\n\nSlidePanel.prototype = Item.prototype;\nSlidePanel.prototype.constructor = SectionPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}