{"ast":null,"code":"//@ts-check\nimport * as utils from '../common/utils.js';\nimport { getOptions } from '../common/options';\nimport { focusableElementsString, doc } from '../common/constants.js';\nimport { getSlideOrSection, getSlideOrSectionPanel } from '../common/utilsFP.js';\nimport { getIsScrollAllowed } from '../common/isScrollAllowed.js';\nimport { SECTION_ACTIVE_SEL, SLIDE_ACTIVE_SEL, SLIDE_SEL, SECTION_SEL, OVERFLOW_SEL } from '../common/selectors.js';\nimport { getActivePanel, getState, setState, state } from '../common/state.js';\nimport { moveSlideLeft, moveSlideRight } from '../slides/moveSlide.js';\nimport { scrollOverflowHandler } from '../scrolloverflow.js';\nimport { EventEmitter } from '../common/eventEmitter.js';\nimport { moveSectionUp } from '../scroll/moveSectionUp.js';\nimport { moveSectionDown } from '../scroll/moveSectionDown.js';\nimport { moveTo } from '../scroll/moveTo.js';\nimport { events } from '../common/events.js';\nimport { isInsideInput } from '../common/utils.js';\nlet g_controlPressed;\nlet g_keydownId;\nlet g_elToFocus;\nEventEmitter.on(events.bindEvents, bindEvents);\nfunction bindEvents() {\n  //when opening a new tab (ctrl + t), `control` won't be pressed when coming back.\n  utils.windowAddEvent('blur', blurHandler);\n\n  //Sliding with arrow keys, both, vertical and horizontal\n  utils.docAddEvent('keydown', keydownHandler);\n\n  //to prevent scrolling while zooming\n  utils.docAddEvent('keyup', keyUpHandler);\n  EventEmitter.on(events.onDestroy, onDestroy);\n  EventEmitter.on(events.afterSlideLoads, onAfterSlideLoads);\n  EventEmitter.on(events.afterSectionLoads, afterSectionLoads);\n}\nfunction onDestroy() {\n  clearTimeout(g_keydownId);\n  utils.docRemoveEvent('keydown', keydownHandler);\n  utils.docRemoveEvent('keyup', keyUpHandler);\n}\n\n//Sliding with arrow keys, both, vertical and horizontal\nfunction keydownHandler(e) {\n  clearTimeout(g_keydownId);\n  var keyCode = e.keyCode;\n  var isPressingHorizontalArrows = [37, 39].indexOf(keyCode) > -1;\n  var canScrollWithKeyboard = getOptions().autoScrolling || getOptions().fitToSection || isPressingHorizontalArrows;\n\n  //tab?\n  if (keyCode === 9) {\n    onTab(e);\n  } else if (!isInsideInput() && getOptions().keyboardScrolling && canScrollWithKeyboard) {\n    g_controlPressed = e.ctrlKey;\n    g_keydownId = setTimeout(function () {\n      onkeydown(e);\n    }, 0);\n  }\n}\n\n/**\n* Keydown event\n*/\nfunction onkeydown(e) {\n  var shiftPressed = e.shiftKey;\n  var activeElement = doc.activeElement;\n  var isMediaFocused = utils.matches(activeElement, 'video') || utils.matches(activeElement, 'audio');\n  var isScrolled = {\n    up: scrollOverflowHandler.isScrolled('up', getState().activeSection.item),\n    down: scrollOverflowHandler.isScrolled('down', getState().activeSection.item)\n  };\n  var isUsingHorizontalArrowKeys = [37, 39].indexOf(e.keyCode) > -1;\n  cancelDirectionKeyEvents(e);\n\n  //do nothing if we can not scroll or we are not using horizotnal key arrows.\n  if (!state.canScroll && !isUsingHorizontalArrowKeys) {\n    return;\n  }\n  setState({\n    scrollTrigger: 'keydown'\n  });\n  switch (e.keyCode) {\n    //up\n    case 38:\n    case 33:\n      if (getIsScrollAllowed().k.up && isScrolled.up) {\n        if (state.isBeyondFullpage) {\n          EventEmitter.emit(events.onKeyDown, {\n            e: e\n          });\n        } else {\n          moveSectionUp();\n        }\n      } else {\n        scrollOverflowHandler.focusScrollable();\n      }\n      break;\n\n    //down\n    case 32:\n      //spacebar\n      if (shiftPressed && getIsScrollAllowed().k.up && !isMediaFocused && isScrolled.up) {\n        moveSectionUp();\n        break;\n      }\n    /* falls through */\n    case 40:\n    case 34:\n      if (getIsScrollAllowed().k.down && isScrolled.down) {\n        if (state.isBeyondFullpage) {\n          return;\n        }\n\n        // space bar?\n        if (e.keyCode !== 32 || !isMediaFocused) {\n          moveSectionDown();\n        }\n      } else {\n        scrollOverflowHandler.focusScrollable();\n      }\n      break;\n\n    //Home\n    case 36:\n      if (getIsScrollAllowed().k.up) {\n        moveTo(1);\n      }\n      break;\n\n    //End\n    case 35:\n      if (getIsScrollAllowed().k.down) {\n        moveTo(getState().sections.length);\n      }\n      break;\n\n    //left\n    case 37:\n      if (getIsScrollAllowed().k.left) {\n        moveSlideLeft();\n      }\n      break;\n\n    //right\n    case 39:\n      if (getIsScrollAllowed().k.right) {\n        moveSlideRight();\n      }\n      break;\n    default:\n      return;\n    // exit this handler for other keys\n  }\n}\n\n//to prevent scrolling while zooming\nfunction keyUpHandler(e) {\n  if (state.isWindowFocused) {\n    //the keyup gets fired on new tab ctrl + t in Firefox\n    g_controlPressed = e.ctrlKey;\n  }\n}\n\n//when opening a new tab (ctrl + t), `control` won't be pressed when coming back.\nfunction blurHandler() {\n  setState({\n    isWindowFocused: false\n  });\n  g_controlPressed = false;\n}\n\n/**\n* Makes sure the tab key will only focus elements within the current section/slide\n* preventing this way from breaking the page.\n* Based on \"Modals and keyboard traps\"\n* from https://developers.google.com/web/fundamentals/accessibility/focus/using-tabindex\n*/\nfunction onTab(e) {\n  var isShiftPressed = e.shiftKey;\n  var activeElement = doc.activeElement;\n  var focusableElements = getFocusables(getSlideOrSection(getState().activeSection.item));\n  function preventAndFocusFirst(e) {\n    utils.preventDefault(e);\n    return focusableElements[0] ? focusableElements[0].focus() : null;\n  }\n\n  // deactivating tab while scrolling #4550\n  if (!state.canScroll) {\n    utils.preventDefault(e);\n    return;\n  }\n\n  //outside any section or slide? Let's not hijack the tab!\n  if (isFocusOutside(e)) {\n    return;\n  }\n\n  //is there an element with focus?\n  if (activeElement) {\n    if (utils.closest(activeElement, SECTION_ACTIVE_SEL + ',' + SECTION_ACTIVE_SEL + ' ' + SLIDE_ACTIVE_SEL) == null) {\n      activeElement = preventAndFocusFirst(e);\n    }\n  }\n\n  //no element if focused? Let's focus the first one of the section/slide\n  else {\n    preventAndFocusFirst(e);\n  }\n\n  //when reached the first or last focusable element of the section/slide\n  //we prevent the tab action to keep it in the last focusable element\n  const isFirstFocusableInSection = activeElement == focusableElements[0];\n  const isLastFocusableInSection = activeElement == focusableElements[focusableElements.length - 1];\n  const isNextItem = !isShiftPressed && isLastFocusableInSection;\n  const isPrevItem = isShiftPressed && isFirstFocusableInSection;\n  if (isPrevItem || isNextItem) {\n    utils.preventDefault(e);\n    var focusInfo = getPanelWithFocusable(isPrevItem);\n    var destinationPanel = focusInfo ? focusInfo.panel : null;\n    if (destinationPanel) {\n      var destinationSection = destinationPanel.isSection ? destinationPanel : destinationPanel.parent;\n      EventEmitter.emit(events.onScrollPageAndSlide, {\n        sectionAnchor: destinationSection.index() + 1,\n        slideAnchor: destinationPanel.isSection ? 0 : destinationPanel.index()\n      });\n      g_elToFocus = focusInfo.itemToFocus;\n      utils.preventDefault(e);\n    }\n  }\n}\nfunction onAfterSlideLoads(v) {\n  focusItem();\n}\nfunction afterSectionLoads(v) {\n  if (!utils.closest(g_elToFocus, SLIDE_SEL) || utils.closest(g_elToFocus, SLIDE_ACTIVE_SEL)) {\n    focusItem();\n  }\n}\nfunction focusItem() {\n  if (g_elToFocus) {\n    g_elToFocus.focus();\n    g_elToFocus = null;\n  }\n}\n\n/**\n * Get's the panel containing the element to focus.\n *\n */\nfunction getPanelWithFocusable(isPrevItem) {\n  var action = isPrevItem ? 'prevPanel' : 'nextPanel';\n  var focusableElements = [];\n  var panelWithFocusables;\n  var currentPanel = getSlideOrSectionPanel(getActivePanel()[action]());\n  do {\n    focusableElements = getFocusables(currentPanel.item);\n    if (focusableElements.length) {\n      panelWithFocusables = {\n        panel: currentPanel,\n        itemToFocus: focusableElements[isPrevItem ? focusableElements.length - 1 : 0]\n      };\n    }\n    currentPanel = getSlideOrSectionPanel(currentPanel[action]());\n  } while (currentPanel && focusableElements.length === 0);\n  return panelWithFocusables;\n}\n\n/**\n* Gets all the focusable elements inside the passed element.\n*/\nfunction getFocusables(el) {\n  return [].slice.call(utils.$(focusableElementsString, el)).filter(function (item) {\n    return utils.getAttr(item, 'tabindex') !== '-1' &&\n    //are also not hidden elements (or with hidden parents)\n    item.offsetParent !== null;\n  });\n}\n\n/**\n* Determines whether the focus is outside fullpage.js sections/slides or not.\n*/\nfunction isFocusOutside(e) {\n  var allFocusables = getFocusables(doc);\n  var currentFocusIndex = allFocusables.indexOf(doc.activeElement);\n  var focusDestinationIndex = e.shiftKey ? currentFocusIndex - 1 : currentFocusIndex + 1;\n  var focusDestination = allFocusables[focusDestinationIndex];\n  var destinationItemSlide = utils.closest(focusDestination, SLIDE_SEL);\n  var destinationItemSection = utils.closest(focusDestination, SECTION_SEL);\n  return !destinationItemSlide && !destinationItemSection;\n}\nfunction shouldCancelKeyboardNavigation(e) {\n  // https://keycode.info/for/34\n  // 40 = arrow down\n  // 38 = arrow up\n  // 32 = spacebar\n  // 33  = PageUp\n  // 34 = PageDown\n  var keyControls = [40, 38, 32, 33, 34];\n  return keyControls.indexOf(e.keyCode) > -1 && !state.isBeyondFullpage;\n}\n\n//preventing the scroll with arrow keys & spacebar & Page Up & Down keys\nfunction cancelDirectionKeyEvents(e) {\n  if (shouldCancelKeyboardNavigation(e) && !utils.closest(e.target, OVERFLOW_SEL)) {\n    e.preventDefault();\n  }\n}\nexport function getControlPressed() {\n  return g_controlPressed;\n}","map":{"version":3,"names":["utils","getOptions","focusableElementsString","doc","getSlideOrSection","getSlideOrSectionPanel","getIsScrollAllowed","SECTION_ACTIVE_SEL","SLIDE_ACTIVE_SEL","SLIDE_SEL","SECTION_SEL","OVERFLOW_SEL","getActivePanel","getState","setState","state","moveSlideLeft","moveSlideRight","scrollOverflowHandler","EventEmitter","moveSectionUp","moveSectionDown","moveTo","events","isInsideInput","g_controlPressed","g_keydownId","g_elToFocus","on","bindEvents","windowAddEvent","blurHandler","docAddEvent","keydownHandler","keyUpHandler","onDestroy","afterSlideLoads","onAfterSlideLoads","afterSectionLoads","clearTimeout","docRemoveEvent","e","keyCode","isPressingHorizontalArrows","indexOf","canScrollWithKeyboard","autoScrolling","fitToSection","onTab","keyboardScrolling","ctrlKey","setTimeout","onkeydown","shiftPressed","shiftKey","activeElement","isMediaFocused","matches","isScrolled","up","activeSection","item","down","isUsingHorizontalArrowKeys","cancelDirectionKeyEvents","canScroll","scrollTrigger","k","isBeyondFullpage","emit","onKeyDown","focusScrollable","sections","length","left","right","isWindowFocused","isShiftPressed","focusableElements","getFocusables","preventAndFocusFirst","preventDefault","focus","isFocusOutside","closest","isFirstFocusableInSection","isLastFocusableInSection","isNextItem","isPrevItem","focusInfo","getPanelWithFocusable","destinationPanel","panel","destinationSection","isSection","parent","onScrollPageAndSlide","sectionAnchor","index","slideAnchor","itemToFocus","v","focusItem","action","panelWithFocusables","currentPanel","el","slice","call","$","filter","getAttr","offsetParent","allFocusables","currentFocusIndex","focusDestinationIndex","focusDestination","destinationItemSlide","destinationItemSection","shouldCancelKeyboardNavigation","keyControls","target","getControlPressed"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/keyboard/index.js"],"sourcesContent":["//@ts-check\nimport * as utils from '../common/utils.js';\nimport { getOptions } from '../common/options';\nimport { focusableElementsString, doc } from '../common/constants.js';\nimport { getSlideOrSection, getSlideOrSectionPanel } from '../common/utilsFP.js';\nimport { getIsScrollAllowed } from '../common/isScrollAllowed.js';\nimport { \n    SECTION_ACTIVE_SEL,\n    SLIDE_ACTIVE_SEL,\n    SLIDE_SEL,\n    SECTION_SEL,\n    OVERFLOW_SEL\n} from '../common/selectors.js';\nimport { getActivePanel, getState, setState, state } from '../common/state.js';\nimport { moveSlideLeft, moveSlideRight } from '../slides/moveSlide.js';\nimport { scrollOverflowHandler } from '../scrolloverflow.js';\nimport { EventEmitter } from '../common/eventEmitter.js';\nimport { moveSectionUp } from '../scroll/moveSectionUp.js';\nimport { moveSectionDown } from '../scroll/moveSectionDown.js';\nimport { moveTo } from '../scroll/moveTo.js';\nimport { events } from '../common/events.js';\nimport { isInsideInput } from '../common/utils.js';\n\nlet g_controlPressed;\nlet g_keydownId;\nlet g_elToFocus;\n\nEventEmitter.on(events.bindEvents, bindEvents);\n\nfunction bindEvents(){\n    //when opening a new tab (ctrl + t), `control` won't be pressed when coming back.\n    utils.windowAddEvent('blur', blurHandler);\n\n    //Sliding with arrow keys, both, vertical and horizontal\n    utils.docAddEvent('keydown', keydownHandler);\n\n    //to prevent scrolling while zooming\n    utils.docAddEvent('keyup', keyUpHandler);\n\n    EventEmitter.on(events.onDestroy, onDestroy);\n\n    EventEmitter.on(events.afterSlideLoads, onAfterSlideLoads);\n    EventEmitter.on(events.afterSectionLoads, afterSectionLoads);\n}\n\n\nfunction onDestroy(){\n    clearTimeout(g_keydownId);\n    utils.docRemoveEvent('keydown', keydownHandler);\n    utils.docRemoveEvent('keyup', keyUpHandler);\n}\n\n//Sliding with arrow keys, both, vertical and horizontal\nfunction keydownHandler(e) {\n    clearTimeout(g_keydownId);\n\n    var keyCode = e.keyCode;\n    var isPressingHorizontalArrows = [37,39].indexOf(keyCode) > -1;\n    var canScrollWithKeyboard = getOptions().autoScrolling || getOptions().fitToSection || isPressingHorizontalArrows;\n    \n    //tab?\n    if(keyCode === 9){\n        onTab(e);\n    }\n\n    else if( !isInsideInput() &&\n        getOptions().keyboardScrolling && \n        canScrollWithKeyboard){\n\n        g_controlPressed = e.ctrlKey;\n\n        g_keydownId = setTimeout(function(){\n            onkeydown(e);\n        },0);\n    }\n}\n\n/**\n* Keydown event\n*/\nfunction onkeydown(e){\n    var shiftPressed = e.shiftKey;\n    var activeElement = doc.activeElement;\n    var isMediaFocused = utils.matches(activeElement, 'video') || utils.matches(activeElement, 'audio');\n    var isScrolled = {\n        up: scrollOverflowHandler.isScrolled('up', getState().activeSection.item),\n        down: scrollOverflowHandler.isScrolled('down', getState().activeSection.item)\n    };\n\n    var isUsingHorizontalArrowKeys = [37,39].indexOf(e.keyCode) > -1;\n    \n    cancelDirectionKeyEvents(e);\n    \n    //do nothing if we can not scroll or we are not using horizotnal key arrows.\n    if(!state.canScroll && !isUsingHorizontalArrowKeys){\n        return;\n    }\n\n    setState({scrollTrigger: 'keydown'});\n\n    switch (e.keyCode) {\n        //up\n        case 38:\n        case 33:\n            if(getIsScrollAllowed().k.up && isScrolled.up){\n                if( state.isBeyondFullpage ){\n                    EventEmitter.emit(events.onKeyDown, {e: e});\n                }else{\n                    moveSectionUp();\n                }\n            }\n            else{\n                scrollOverflowHandler.focusScrollable();\n            }\n            break;\n\n        //down\n        case 32: //spacebar\n            if(shiftPressed && getIsScrollAllowed().k.up && !isMediaFocused && isScrolled.up){\n                moveSectionUp();\n                break;\n            }\n        /* falls through */\n        case 40:\n        case 34:\n            if(getIsScrollAllowed().k.down && isScrolled.down){\n                if( state.isBeyondFullpage ){\n                    return;\n                }\n                \n                // space bar?\n                if(e.keyCode !== 32 || !isMediaFocused){\n                    moveSectionDown();\n                }\n            }\n            else{\n                scrollOverflowHandler.focusScrollable();\n            }   \n            break;\n\n        //Home\n        case 36:\n            if(getIsScrollAllowed().k.up){\n                moveTo(1);\n            }\n            break;\n\n        //End\n        case 35:\n             if(getIsScrollAllowed().k.down){\n                moveTo( getState().sections.length );\n            }\n            break;\n\n        //left\n        case 37:\n            if(getIsScrollAllowed().k.left){\n                moveSlideLeft();\n            }\n            break;\n\n        //right\n        case 39:\n            if(getIsScrollAllowed().k.right){\n                moveSlideRight();\n            }\n            break;\n\n        default:\n            return; // exit this handler for other keys\n    }\n}    \n\n\n//to prevent scrolling while zooming\nfunction keyUpHandler(e){\n    if(state.isWindowFocused){ //the keyup gets fired on new tab ctrl + t in Firefox\n        g_controlPressed = e.ctrlKey;\n    }\n}\n\n\n//when opening a new tab (ctrl + t), `control` won't be pressed when coming back.\nfunction blurHandler(){\n    setState({isWindowFocused: false});\n    g_controlPressed = false;\n}\n\n\n/**\n* Makes sure the tab key will only focus elements within the current section/slide\n* preventing this way from breaking the page.\n* Based on \"Modals and keyboard traps\"\n* from https://developers.google.com/web/fundamentals/accessibility/focus/using-tabindex\n*/\nfunction onTab(e){\n    var isShiftPressed = e.shiftKey;\n    var activeElement = doc.activeElement;\n    var focusableElements = getFocusables(getSlideOrSection(getState().activeSection.item));\n\n    function preventAndFocusFirst(e){\n        utils.preventDefault(e);\n        return focusableElements[0] ? focusableElements[0].focus() : null;\n    }\n\n    // deactivating tab while scrolling #4550\n    if(!state.canScroll){\n        utils.preventDefault(e);\n        return;\n    }\n\n    //outside any section or slide? Let's not hijack the tab!\n    if(isFocusOutside(e)){\n        return;\n    }\n\n    //is there an element with focus?\n    if(activeElement){\n        if(utils.closest(activeElement, SECTION_ACTIVE_SEL + ',' + SECTION_ACTIVE_SEL + ' ' + SLIDE_ACTIVE_SEL) == null){\n            activeElement = preventAndFocusFirst(e);\n        }\n    }\n\n    //no element if focused? Let's focus the first one of the section/slide\n    else{\n        preventAndFocusFirst(e);\n    }\n\n    //when reached the first or last focusable element of the section/slide\n    //we prevent the tab action to keep it in the last focusable element\n    const isFirstFocusableInSection = activeElement == focusableElements[0];\n    const isLastFocusableInSection = activeElement == focusableElements[focusableElements.length - 1];\n    const isNextItem = !isShiftPressed && isLastFocusableInSection;\n    const isPrevItem = isShiftPressed && isFirstFocusableInSection;\n\n    if( isPrevItem || isNextItem ){\n        utils.preventDefault(e);\n\n        var focusInfo = getPanelWithFocusable(isPrevItem);\n        var destinationPanel = focusInfo ? focusInfo.panel : null;\n\n        if(destinationPanel){\n            var destinationSection = destinationPanel.isSection ? destinationPanel : destinationPanel.parent;\n\n            EventEmitter.emit(events.onScrollPageAndSlide, {\n                sectionAnchor: destinationSection.index() + 1,\n                slideAnchor: destinationPanel.isSection ? 0 : destinationPanel.index()\n            });\n            g_elToFocus = focusInfo.itemToFocus;\n            utils.preventDefault(e);\n        }\n    }\n}\n\nfunction onAfterSlideLoads(v){\n    focusItem();\n}\n\nfunction afterSectionLoads(v){\n    if(!utils.closest(g_elToFocus, SLIDE_SEL) || utils.closest(g_elToFocus, SLIDE_ACTIVE_SEL)){\n        focusItem();\n    }\n}\n\nfunction focusItem(){\n    if(g_elToFocus){\n        g_elToFocus.focus();\n        g_elToFocus = null;\n    }\n}\n\n/**\n * Get's the panel containing the element to focus.\n *\n */\nfunction getPanelWithFocusable(isPrevItem){\n    var action = isPrevItem ? 'prevPanel' : 'nextPanel';\n    var focusableElements = [];\n    var panelWithFocusables;\n    var currentPanel = getSlideOrSectionPanel(getActivePanel()[action]());\n    \n    do{\n        focusableElements = getFocusables(currentPanel.item);\n\n        if(focusableElements.length){\n            panelWithFocusables = {\n                panel: currentPanel,\n                itemToFocus: focusableElements[isPrevItem ? focusableElements.length -1 : 0]\n            };\n        }\n        currentPanel = getSlideOrSectionPanel(currentPanel[action]());\n\n    }while(currentPanel && focusableElements.length === 0);\n\n    return panelWithFocusables;\n}\n\n\n/**\n* Gets all the focusable elements inside the passed element.\n*/\nfunction getFocusables(el){\n    return [].slice.call(utils.$(focusableElementsString, el)).filter(function(item) {\n            return utils.getAttr(item, 'tabindex') !== '-1' &&\n            //are also not hidden elements (or with hidden parents)\n            item.offsetParent !== null;\n    });\n}\n\n\n/**\n* Determines whether the focus is outside fullpage.js sections/slides or not.\n*/\nfunction isFocusOutside(e){\n    var allFocusables = getFocusables(doc);\n    var currentFocusIndex = allFocusables.indexOf(doc.activeElement);\n    var focusDestinationIndex = e.shiftKey ? currentFocusIndex - 1 : currentFocusIndex + 1;\n    var focusDestination = allFocusables[focusDestinationIndex];\n    var destinationItemSlide = utils.closest(focusDestination, SLIDE_SEL);\n    var destinationItemSection = utils.closest(focusDestination, SECTION_SEL);\n    \n    return !destinationItemSlide && !destinationItemSection;\n}\n\nfunction shouldCancelKeyboardNavigation(e){\n    // https://keycode.info/for/34\n    // 40 = arrow down\n    // 38 = arrow up\n    // 32 = spacebar\n    // 33  = PageUp\n    // 34 = PageDown\n    var keyControls = [40, 38, 32, 33, 34];\n    return keyControls.indexOf(e.keyCode) > -1 && !state.isBeyondFullpage;\n}\n\n//preventing the scroll with arrow keys & spacebar & Page Up & Down keys\nfunction cancelDirectionKeyEvents(e){\n    if(shouldCancelKeyboardNavigation(e) && !utils.closest(e.target, OVERFLOW_SEL)){\n        e.preventDefault();\n    }\n}\n\nexport function getControlPressed(){\n    return g_controlPressed;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}