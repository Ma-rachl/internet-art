{"ast":null,"code":"//@ts-check\nimport * as utils from './utils.js';\nimport { setScrolling } from './utilsFP.js';\nimport { state, setState } from \"./state.js\";\nimport { getOptions } from './options.js';\nimport { SLIDES_WRAPPER } from './selectors.js';\nimport { win } from './constants.js';\nimport { $html } from './cache.js';\nvar g_animateScroll;\n\n/**\n* Simulates the animated scrollTop of jQuery. Used when css3:false or scrollBar:true or autoScrolling:false\n* http://stackoverflow.com/a/16136789/1081396\n*/\nexport function scrollTo(element, to, duration, callback) {\n  var start = getScrolledPosition(element);\n  var change = to - start;\n  var isCallbackFired = false;\n  var startTime;\n  var wasAnimationActive = state.activeAnimation;\n  setState({\n    activeAnimation: true\n  });\n\n  // Cancelling any possible previous animations (io: clicking on nav dots very fast)\n  if (g_animateScroll) {\n    window.cancelAnimationFrame(g_animateScroll);\n  }\n  g_animateScroll = function (timestamp) {\n    if (!startTime) {\n      startTime = timestamp;\n    }\n    var currentTime = Math.floor(timestamp - startTime);\n    if (state.activeAnimation) {\n      //in order to stope it from other function whenever we want\n      var val = to;\n      if (duration) {\n        // @ts-ignore\n        val = win.fp_easings[getOptions().easing](currentTime, start, change, duration);\n      }\n      if (currentTime <= duration) {\n        setScrolling(element, val);\n      }\n      if (currentTime < duration) {\n        window.requestAnimationFrame(g_animateScroll);\n      } else if (typeof callback !== 'undefined' && !isCallbackFired) {\n        callback();\n        setState({\n          activeAnimation: false\n        });\n        isCallbackFired = true;\n      }\n    } else if (!isCallbackFired && !wasAnimationActive) {\n      callback();\n      setState({\n        activeAnimation: false\n      });\n      isCallbackFired = true;\n    }\n  };\n  window.requestAnimationFrame(g_animateScroll);\n}\n\n/**\n* Getting the position of the element to scroll when using jQuery animations\n*/\nfunction getScrolledPosition(element) {\n  var position;\n\n  //is not the window element and is a slide?\n  if (element.self != win && utils.hasClass(element, SLIDES_WRAPPER)) {\n    position = element.scrollLeft;\n  } else if (!getOptions().autoScrolling || getOptions().scrollBar) {\n    position = utils.getScrollTop();\n  } else {\n    position = element.offsetTop;\n  }\n\n  //gets the top property of the wrapper\n  return position;\n}","map":{"version":3,"names":["utils","setScrolling","state","setState","getOptions","SLIDES_WRAPPER","win","$html","g_animateScroll","scrollTo","element","to","duration","callback","start","getScrolledPosition","change","isCallbackFired","startTime","wasAnimationActive","activeAnimation","window","cancelAnimationFrame","timestamp","currentTime","Math","floor","val","fp_easings","easing","requestAnimationFrame","position","self","hasClass","scrollLeft","autoScrolling","scrollBar","getScrollTop","offsetTop"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/common/scrollTo.js"],"sourcesContent":["//@ts-check\nimport * as utils from './utils.js';\nimport { setScrolling } from './utilsFP.js';\nimport { state, setState } from \"./state.js\";\nimport { getOptions } from './options.js';\nimport { SLIDES_WRAPPER } from './selectors.js';\nimport { win } from './constants.js';\nimport { $html } from './cache.js';\n\nvar g_animateScroll;\n\n/**\n* Simulates the animated scrollTop of jQuery. Used when css3:false or scrollBar:true or autoScrolling:false\n* http://stackoverflow.com/a/16136789/1081396\n*/\nexport function scrollTo(element, to, duration, callback) {\n    var start = getScrolledPosition(element);\n    var change = to - start;\n    var isCallbackFired = false;\n    var startTime;\n    var wasAnimationActive = state.activeAnimation;\n\n    setState({activeAnimation: true});\n\n    // Cancelling any possible previous animations (io: clicking on nav dots very fast)\n    if(g_animateScroll){\n        window.cancelAnimationFrame(g_animateScroll);\n    }\n    g_animateScroll = function(timestamp){\n        if (!startTime){\n            startTime = timestamp;\n        }\n\n        var currentTime = Math.floor(timestamp - startTime);\n\n        if(state.activeAnimation){ //in order to stope it from other function whenever we want\n            var val = to;\n\n            if(duration){\n                // @ts-ignore\n                val = win.fp_easings[getOptions().easing](currentTime, start, change, duration);\n            }\n\n            if(currentTime <= duration) {\n                setScrolling(element, val);\n            }\n\n            if(currentTime < duration) {\n                window.requestAnimationFrame(g_animateScroll);\n            }else if(typeof callback !== 'undefined' && !isCallbackFired){\n                callback();\n                setState({activeAnimation: false});\n                isCallbackFired = true;\n            }\n        }else if (!isCallbackFired && !wasAnimationActive){\n            callback();\n            setState({activeAnimation: false});\n            isCallbackFired = true;\n        }\n    };\n\n    window.requestAnimationFrame(g_animateScroll);\n}\n\n\n/**\n* Getting the position of the element to scroll when using jQuery animations\n*/\nfunction getScrolledPosition(element){\n    var position;\n\n    //is not the window element and is a slide?\n    if(element.self != win && utils.hasClass(element, SLIDES_WRAPPER)){\n        position = element.scrollLeft;\n    }\n    else if(!getOptions().autoScrolling || getOptions().scrollBar){\n        position = utils.getScrollTop();\n    }\n    else{\n        position = element.offsetTop;\n    }\n\n    //gets the top property of the wrapper\n    return position;\n}"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,YAAY;AACnC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,KAAK,EAAEC,QAAQ,QAAQ,YAAY;AAC5C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,KAAK,QAAQ,YAAY;AAElC,IAAIC,eAAe;;AAEnB;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,OAAO,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EACtD,IAAIC,KAAK,GAAGC,mBAAmB,CAACL,OAAO,CAAC;EACxC,IAAIM,MAAM,GAAGL,EAAE,GAAGG,KAAK;EACvB,IAAIG,eAAe,GAAG,KAAK;EAC3B,IAAIC,SAAS;EACb,IAAIC,kBAAkB,GAAGjB,KAAK,CAACkB,eAAe;EAE9CjB,QAAQ,CAAC;IAACiB,eAAe,EAAE;EAAI,CAAC,CAAC;;EAEjC;EACA,IAAGZ,eAAe,EAAC;IACfa,MAAM,CAACC,oBAAoB,CAACd,eAAe,CAAC;EAChD;EACAA,eAAe,GAAG,SAAAA,CAASe,SAAS,EAAC;IACjC,IAAI,CAACL,SAAS,EAAC;MACXA,SAAS,GAAGK,SAAS;IACzB;IAEA,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,SAAS,GAAGL,SAAS,CAAC;IAEnD,IAAGhB,KAAK,CAACkB,eAAe,EAAC;MAAE;MACvB,IAAIO,GAAG,GAAGhB,EAAE;MAEZ,IAAGC,QAAQ,EAAC;QACR;QACAe,GAAG,GAAGrB,GAAG,CAACsB,UAAU,CAACxB,UAAU,CAAC,CAAC,CAACyB,MAAM,CAAC,CAACL,WAAW,EAAEV,KAAK,EAAEE,MAAM,EAAEJ,QAAQ,CAAC;MACnF;MAEA,IAAGY,WAAW,IAAIZ,QAAQ,EAAE;QACxBX,YAAY,CAACS,OAAO,EAAEiB,GAAG,CAAC;MAC9B;MAEA,IAAGH,WAAW,GAAGZ,QAAQ,EAAE;QACvBS,MAAM,CAACS,qBAAqB,CAACtB,eAAe,CAAC;MACjD,CAAC,MAAK,IAAG,OAAOK,QAAQ,KAAK,WAAW,IAAI,CAACI,eAAe,EAAC;QACzDJ,QAAQ,CAAC,CAAC;QACVV,QAAQ,CAAC;UAACiB,eAAe,EAAE;QAAK,CAAC,CAAC;QAClCH,eAAe,GAAG,IAAI;MAC1B;IACJ,CAAC,MAAK,IAAI,CAACA,eAAe,IAAI,CAACE,kBAAkB,EAAC;MAC9CN,QAAQ,CAAC,CAAC;MACVV,QAAQ,CAAC;QAACiB,eAAe,EAAE;MAAK,CAAC,CAAC;MAClCH,eAAe,GAAG,IAAI;IAC1B;EACJ,CAAC;EAEDI,MAAM,CAACS,qBAAqB,CAACtB,eAAe,CAAC;AACjD;;AAGA;AACA;AACA;AACA,SAASO,mBAAmBA,CAACL,OAAO,EAAC;EACjC,IAAIqB,QAAQ;;EAEZ;EACA,IAAGrB,OAAO,CAACsB,IAAI,IAAI1B,GAAG,IAAIN,KAAK,CAACiC,QAAQ,CAACvB,OAAO,EAAEL,cAAc,CAAC,EAAC;IAC9D0B,QAAQ,GAAGrB,OAAO,CAACwB,UAAU;EACjC,CAAC,MACI,IAAG,CAAC9B,UAAU,CAAC,CAAC,CAAC+B,aAAa,IAAI/B,UAAU,CAAC,CAAC,CAACgC,SAAS,EAAC;IAC1DL,QAAQ,GAAG/B,KAAK,CAACqC,YAAY,CAAC,CAAC;EACnC,CAAC,MACG;IACAN,QAAQ,GAAGrB,OAAO,CAAC4B,SAAS;EAChC;;EAEA;EACA,OAAOP,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}