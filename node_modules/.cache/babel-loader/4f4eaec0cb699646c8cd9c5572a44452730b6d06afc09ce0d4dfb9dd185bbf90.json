{"ast":null,"code":"import * as utils from './common/utils.js';\nimport { getIsScrollAllowed } from './common/isScrollAllowed.js';\nimport { isTouchDevice, isTouch, win } from './common/constants.js';\nimport { $body } from './common/cache.js';\nimport { getOptions } from './common/options.js';\nimport { getState, setState, state } from './common/state.js';\nimport { SECTION_SEL, SLIDES_WRAPPER_SEL } from './common/selectors.js';\nimport { EventEmitter } from './common/eventEmitter.js';\nimport { scrolling } from './scroll/scrolling.js';\nimport { scrollOverflowHandler } from './scrolloverflow.js';\nimport { events } from './common/events.js';\nlet touchStartY = 0;\nlet touchStartX = 0;\nlet touchEndY = 0;\nlet touchEndX = 0;\nconst MSPointer = getMSPointer();\nconst pointers = {\n  touchmove: 'ontouchmove' in window ? 'touchmove' : MSPointer ? MSPointer.move : null,\n  touchstart: 'ontouchstart' in window ? 'touchstart' : MSPointer ? MSPointer.down : null\n};\n\n/**\n* Adds the possibility to auto scroll through sections on touch devices.\n*/\nexport function addTouchHandler() {\n  if (!pointers.touchmove) {\n    return;\n  }\n  if (isTouchDevice || isTouch) {\n    if (getOptions().autoScrolling) {\n      $body.removeEventListener(pointers.touchmove, preventBouncing, {\n        passive: false\n      });\n      $body.addEventListener(pointers.touchmove, preventBouncing, {\n        passive: false\n      });\n    }\n    var touchWrapper = getOptions().touchWrapper;\n    touchWrapper.removeEventListener(pointers.touchstart, touchStartHandler);\n    touchWrapper.removeEventListener(pointers.touchmove, touchMoveHandler, {\n      passive: false\n    });\n    touchWrapper.addEventListener(pointers.touchstart, touchStartHandler);\n    touchWrapper.addEventListener(pointers.touchmove, touchMoveHandler, {\n      passive: false\n    });\n  }\n}\n\n/**\n* Removes the auto scrolling for touch devices.\n*/\nexport function removeTouchHandler() {\n  if (!pointers.touchmove) {\n    return;\n  }\n  if (isTouchDevice || isTouch) {\n    // normalScrollElements requires it off #2691\n    if (getOptions().autoScrolling) {\n      $body.removeEventListener(pointers.touchmove, touchMoveHandler, {\n        passive: false\n      });\n      $body.removeEventListener(pointers.touchmove, preventBouncing, {\n        passive: false\n      });\n    }\n    var touchWrapper = getOptions().touchWrapper;\n    touchWrapper.removeEventListener(pointers.touchstart, touchStartHandler);\n    touchWrapper.removeEventListener(pointers.touchmove, touchMoveHandler, {\n      passive: false\n    });\n  }\n}\n\n/* Detecting touch events\n\n* As we are changing the top property of the page on scrolling, we can not use the traditional way to detect it.\n* This way, the touchstart and the touch moves shows an small difference between them which is the\n* used one to determine the direction.\n*/\nfunction touchMoveHandler(e) {\n  var activeSection = utils.closest(e.target, SECTION_SEL) || getState().activeSection.item;\n  var hasActiveSectionOverflow = scrollOverflowHandler.isScrollable(getState().activeSection);\n  if (isReallyTouch(e)) {\n    setState({\n      isGrabbing: true,\n      isUsingWheel: false\n    });\n    if (getOptions().autoScrolling) {\n      if (hasActiveSectionOverflow && !state.canScroll || getOptions().scrollBar) {\n        //preventing the easing on iOS devices\n        utils.preventDefault(e);\n      }\n    }\n    var touchEvents = getEventsPage(e);\n    touchEndY = touchEvents.y;\n    touchEndX = touchEvents.x;\n    var isVerticalMovementEnough = Math.abs(touchStartY - touchEndY) > win.innerHeight / 100 * getOptions().touchSensitivity;\n    var isHorizontalMovementEnough = Math.abs(touchStartX - touchEndX) > utils.getWindowWidth() / 100 * getOptions().touchSensitivity;\n    var isHorizontalPredominantMove = utils.$(SLIDES_WRAPPER_SEL, activeSection).length && Math.abs(touchStartX - touchEndX) > Math.abs(touchStartY - touchEndY);\n    var directionH = touchStartX > touchEndX ? 'right' : 'left';\n    var directionV = touchStartY > touchEndY ? 'down' : 'up';\n    var direction = isHorizontalPredominantMove ? directionH : directionV;\n    setState({\n      touchDirection: direction\n    });\n\n    //if movement in the X axys is greater than in the Y and the currect section has slides...\n    if (isHorizontalPredominantMove) {\n      //is the movement greater than the minimum resistance to scroll?\n      if (!state.slideMoving && isHorizontalMovementEnough) {\n        if (touchStartX > touchEndX) {\n          if (getIsScrollAllowed().m.right) {\n            EventEmitter.emit(events.moveSlideRight, {\n              section: activeSection\n            });\n          }\n        } else {\n          if (getIsScrollAllowed().m.left) {\n            EventEmitter.emit(events.moveSlideLeft, {\n              section: activeSection\n            });\n          }\n        }\n      }\n    }\n\n    //vertical scrolling (only when autoScrolling is enabled)\n    else if (getOptions().autoScrolling && state.canScroll) {\n      //is the movement greater than the minimum resistance to scroll?\n      if (isVerticalMovementEnough) {\n        scrolling(directionV);\n      }\n    }\n  }\n}\n\n/**\n* As IE >= 10 fires both touch and mouse events when using a mouse in a touchscreen\n* this way we make sure that is really a touch event what IE is detecting.\n*/\nfunction isReallyTouch(e) {\n  //if is not IE   ||  IE is detecting `touch` or `pen`\n  return typeof e.pointerType === 'undefined' || e.pointerType != 'mouse';\n}\n\n/**\n* Handler for the touch start event.\n*/\nfunction touchStartHandler(e) {\n  //stopping the auto scroll to adjust to a section\n  if (getOptions().fitToSection) {\n    setState({\n      activeAnimation: false\n    });\n  }\n  if (isReallyTouch(e)) {\n    var touchEvents = getEventsPage(e);\n    touchStartY = touchEvents.y;\n    touchStartX = touchEvents.x;\n  }\n  utils.windowAddEvent('touchend', touchEndHandler);\n}\n\n/**\n* Handler for the touch end event.\n*/\nfunction touchEndHandler() {\n  utils.windowRemoveEvent('touchend', touchEndHandler);\n  setState({\n    isGrabbing: false\n  });\n}\n\n/**\n* Gets the pageX and pageY properties depending on the browser.\n* https://github.com/alvarotrigo/fullPage.js/issues/194#issuecomment-34069854\n*/\nfunction getEventsPage(e) {\n  var events = {};\n  events.y = typeof e.pageY !== 'undefined' && (e.pageY || e.pageX) ? e.pageY : e.touches[0].pageY;\n  events.x = typeof e.pageX !== 'undefined' && (e.pageY || e.pageX) ? e.pageX : e.touches[0].pageX;\n\n  //in touch devices with scrollBar:true, e.pageY is detected, but we have to deal with touch events. #1008\n  if (isTouch && isReallyTouch(e) && getOptions().scrollBar && typeof e.touches !== 'undefined') {\n    events.y = e.touches[0].pageY;\n    events.x = e.touches[0].pageX;\n  }\n  return events;\n}\n\n/*\n* Returns and object with Microsoft pointers (for IE<11 and for IE >= 11)\n* http://msdn.microsoft.com/en-us/library/ie/dn304886(v=vs.85).aspx\n*/\nfunction getMSPointer() {\n  var pointer;\n\n  //IE >= 11 & rest of browsers\n  if (win.PointerEvent) {\n    pointer = {\n      down: 'pointerdown',\n      move: 'pointermove'\n    };\n  }\n  return pointer;\n}\n\n/*\n* Preventing bouncing in iOS #2285\n*/\nfunction preventBouncing(e) {\n  if (getOptions().autoScrolling && isReallyTouch(e) && getIsScrollAllowed().m.up) {\n    //preventing the easing on iOS devices\n    if (!state.canScroll) {\n      utils.preventDefault(e);\n    }\n  }\n}","map":{"version":3,"names":["utils","getIsScrollAllowed","isTouchDevice","isTouch","win","$body","getOptions","getState","setState","state","SECTION_SEL","SLIDES_WRAPPER_SEL","EventEmitter","scrolling","scrollOverflowHandler","events","touchStartY","touchStartX","touchEndY","touchEndX","MSPointer","getMSPointer","pointers","touchmove","window","move","touchstart","down","addTouchHandler","autoScrolling","removeEventListener","preventBouncing","passive","addEventListener","touchWrapper","touchStartHandler","touchMoveHandler","removeTouchHandler","e","activeSection","closest","target","item","hasActiveSectionOverflow","isScrollable","isReallyTouch","isGrabbing","isUsingWheel","canScroll","scrollBar","preventDefault","touchEvents","getEventsPage","y","x","isVerticalMovementEnough","Math","abs","innerHeight","touchSensitivity","isHorizontalMovementEnough","getWindowWidth","isHorizontalPredominantMove","$","length","directionH","directionV","direction","touchDirection","slideMoving","m","right","emit","moveSlideRight","section","left","moveSlideLeft","pointerType","fitToSection","activeAnimation","windowAddEvent","touchEndHandler","windowRemoveEvent","pageY","pageX","touches","pointer","PointerEvent","up"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/touch.js"],"sourcesContent":["import * as utils from './common/utils.js';\nimport { getIsScrollAllowed } from './common/isScrollAllowed.js';\nimport { isTouchDevice, isTouch, win } from './common/constants.js';\nimport { $body } from './common/cache.js';\nimport { getOptions } from './common/options.js';\nimport { getState, setState, state } from './common/state.js';\nimport { \n    SECTION_SEL,\n    SLIDES_WRAPPER_SEL\n} from './common/selectors.js';\nimport { EventEmitter } from './common/eventEmitter.js';\nimport { scrolling } from './scroll/scrolling.js';\nimport { scrollOverflowHandler } from './scrolloverflow.js';\nimport { events } from './common/events.js';\n\nlet touchStartY = 0;\nlet touchStartX = 0;\nlet touchEndY = 0;\nlet touchEndX = 0;\nconst MSPointer = getMSPointer();\nconst pointers = {\n    touchmove: 'ontouchmove' in window ? 'touchmove' :  MSPointer ? MSPointer.move : null,\n    touchstart: 'ontouchstart' in window ? 'touchstart' :  MSPointer ? MSPointer.down : null\n};\n\n/**\n* Adds the possibility to auto scroll through sections on touch devices.\n*/\nexport function addTouchHandler(){\n    if(!pointers.touchmove){\n        return;\n    }\n    if(isTouchDevice || isTouch){\n        if(getOptions().autoScrolling){\n            $body.removeEventListener(pointers.touchmove, preventBouncing, {passive: false});\n            $body.addEventListener(pointers.touchmove, preventBouncing, {passive: false});\n        }\n\n        var touchWrapper = getOptions().touchWrapper;\n        touchWrapper.removeEventListener(pointers.touchstart, touchStartHandler);\n        touchWrapper.removeEventListener(pointers.touchmove, touchMoveHandler, {passive: false});\n\n        touchWrapper.addEventListener(pointers.touchstart, touchStartHandler);\n        touchWrapper.addEventListener(pointers.touchmove, touchMoveHandler, {passive: false});\n    }\n}\n\n\n/**\n* Removes the auto scrolling for touch devices.\n*/\nexport function removeTouchHandler(){\n    if(!pointers.touchmove){\n        return;\n    }\n    if(isTouchDevice || isTouch){\n        // normalScrollElements requires it off #2691\n        if(getOptions().autoScrolling){\n            $body.removeEventListener(pointers.touchmove, touchMoveHandler, {passive: false});\n            $body.removeEventListener(pointers.touchmove, preventBouncing, {passive: false});\n        }\n\n        var touchWrapper = getOptions().touchWrapper;\n        touchWrapper.removeEventListener(pointers.touchstart, touchStartHandler);\n        touchWrapper.removeEventListener(pointers.touchmove, touchMoveHandler, {passive: false});\n    }\n}\n\n\n/* Detecting touch events\n\n* As we are changing the top property of the page on scrolling, we can not use the traditional way to detect it.\n* This way, the touchstart and the touch moves shows an small difference between them which is the\n* used one to determine the direction.\n*/\nfunction touchMoveHandler(e){\n    var activeSection = utils.closest(e.target, SECTION_SEL) || getState().activeSection.item;\n    var hasActiveSectionOverflow = scrollOverflowHandler.isScrollable(getState().activeSection);\n    \n    if (isReallyTouch(e) ) {\n        setState({\n            isGrabbing: true,\n            isUsingWheel: false\n        });\n\n        if(getOptions().autoScrolling){\n            if( (hasActiveSectionOverflow && !state.canScroll) || getOptions().scrollBar){\n\n                //preventing the easing on iOS devices\n                utils.preventDefault(e);\n            }\n        }\n\n        var touchEvents = getEventsPage(e);\n\n        touchEndY = touchEvents.y;\n        touchEndX = touchEvents.x;\n\n        var isVerticalMovementEnough = Math.abs(touchStartY - touchEndY) > (win.innerHeight / 100 * getOptions().touchSensitivity);\n        var isHorizontalMovementEnough = Math.abs(touchStartX - touchEndX) > (utils.getWindowWidth() / 100 * getOptions().touchSensitivity);\n        var isHorizontalPredominantMove = utils.$(SLIDES_WRAPPER_SEL, activeSection).length && Math.abs(touchStartX - touchEndX) > (Math.abs(touchStartY - touchEndY));\n        var directionH = touchStartX > touchEndX ? 'right' : 'left';\n        var directionV = touchStartY > touchEndY ? 'down' : 'up';\n        var direction = isHorizontalPredominantMove ? directionH : directionV;\n\n        setState({touchDirection: direction});\n\n        //if movement in the X axys is greater than in the Y and the currect section has slides...\n        if (isHorizontalPredominantMove) {\n\n            //is the movement greater than the minimum resistance to scroll?\n            if (!state.slideMoving && isHorizontalMovementEnough) {\n                if (touchStartX > touchEndX) {\n                    if(getIsScrollAllowed().m.right){\n                        EventEmitter.emit(events.moveSlideRight, {section: activeSection});\n                    }\n                } else {\n                    if(getIsScrollAllowed().m.left){\n                        EventEmitter.emit(events.moveSlideLeft, {section: activeSection});\n                    }\n                }\n            }\n        }\n\n        //vertical scrolling (only when autoScrolling is enabled)\n        else if(getOptions().autoScrolling && state.canScroll){\n\n            //is the movement greater than the minimum resistance to scroll?\n            if (isVerticalMovementEnough) {\n                scrolling(directionV);\n            }\n        }\n    }\n}\n\n/**\n* As IE >= 10 fires both touch and mouse events when using a mouse in a touchscreen\n* this way we make sure that is really a touch event what IE is detecting.\n*/\nfunction isReallyTouch(e){\n    //if is not IE   ||  IE is detecting `touch` or `pen`\n    return typeof e.pointerType === 'undefined' || e.pointerType != 'mouse';\n}\n\n/**\n* Handler for the touch start event.\n*/\nfunction touchStartHandler(e){\n\n    //stopping the auto scroll to adjust to a section\n    if(getOptions().fitToSection){\n        setState({activeAnimation: false});\n    }\n\n    if(isReallyTouch(e)){\n        var touchEvents = getEventsPage(e);\n        touchStartY = touchEvents.y;\n        touchStartX = touchEvents.x;\n    }\n\n    utils.windowAddEvent('touchend', touchEndHandler);\n}\n\n/**\n* Handler for the touch end event.\n*/\nfunction touchEndHandler(){\n    utils.windowRemoveEvent('touchend', touchEndHandler);\n    setState({isGrabbing: false});\n}\n\n/**\n* Gets the pageX and pageY properties depending on the browser.\n* https://github.com/alvarotrigo/fullPage.js/issues/194#issuecomment-34069854\n*/\nfunction getEventsPage(e){\n    var events = {};\n\n    events.y = (typeof e.pageY !== 'undefined' && (e.pageY || e.pageX) ? e.pageY : e.touches[0].pageY);\n    events.x = (typeof e.pageX !== 'undefined' && (e.pageY || e.pageX) ? e.pageX : e.touches[0].pageX);\n\n    //in touch devices with scrollBar:true, e.pageY is detected, but we have to deal with touch events. #1008\n    if(isTouch && isReallyTouch(e) && getOptions().scrollBar && typeof e.touches !== 'undefined'){\n        events.y = e.touches[0].pageY;\n        events.x = e.touches[0].pageX;\n    }\n\n    return events;\n}\n\n/*\n* Returns and object with Microsoft pointers (for IE<11 and for IE >= 11)\n* http://msdn.microsoft.com/en-us/library/ie/dn304886(v=vs.85).aspx\n*/\nfunction getMSPointer(){\n    var pointer;\n\n    //IE >= 11 & rest of browsers\n    if(win.PointerEvent){\n        pointer = { down: 'pointerdown', move: 'pointermove'};\n    }\n\n    return pointer;\n}\n\n/*\n* Preventing bouncing in iOS #2285\n*/\nfunction preventBouncing(e){\n    if(getOptions().autoScrolling && isReallyTouch(e) && getIsScrollAllowed().m.up){\n        //preventing the easing on iOS devices\n        if(!state.canScroll){\n            utils.preventDefault(e);\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}