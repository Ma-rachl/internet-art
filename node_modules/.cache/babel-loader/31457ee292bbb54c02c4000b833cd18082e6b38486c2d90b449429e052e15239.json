{"ast":null,"code":"import * as utils from './common/utils.js';\nimport { setMouseHijack } from './mouse/wheel.js';\nimport { getOptions } from './common/options.js';\nimport { FP } from './common/constants.js';\nimport { EventEmitter } from './common/eventEmitter.js';\nimport { events } from './common/events.js';\nlet g_canFireMouseEnterNormalScroll = true;\nEventEmitter.on(events.bindEvents, bindEvents);\nfunction bindEvents() {\n  /**\n  * Applying normalScroll elements.\n  * Ignoring the scrolls over the specified selectors.\n  */\n  if (getOptions().normalScrollElements) {\n    ['mouseenter', 'touchstart'].forEach(function (eventName) {\n      forMouseLeaveOrTouch(eventName, false);\n    });\n    ['mouseleave', 'touchend'].forEach(function (eventName) {\n      forMouseLeaveOrTouch(eventName, true);\n    });\n  }\n  EventEmitter.on(events.onDestroy, onDestroy);\n}\nfunction onDestroy() {\n  ['mouseenter', 'touchstart', 'mouseleave', 'touchend'].forEach(function (eventName) {\n    utils.docRemoveEvent(eventName, onMouseEnterOrLeave, true); //true is required!\n  });\n}\nfunction forMouseLeaveOrTouch(eventName, allowScrolling) {\n  //a way to pass arguments to the onMouseEnterOrLeave function\n  document['fp_' + eventName] = allowScrolling;\n  utils.docAddEvent(eventName, onMouseEnterOrLeave, true); //capturing phase\n}\nfunction onMouseEnterOrLeave(e) {\n  var type = e.type;\n  var isInsideOneNormalScroll = false;\n\n  //onMouseLeave will use the destination target, not the one we are moving away from\n  var target = type === 'mouseleave' ? e.toElement || e.relatedTarget : e.target;\n\n  //coming from closing a normalScrollElements modal or moving outside viewport?\n  if (target == document || !target) {\n    setMouseHijack(true);\n    return;\n  }\n  if (type === 'touchend') {\n    g_canFireMouseEnterNormalScroll = false;\n    setTimeout(function () {\n      g_canFireMouseEnterNormalScroll = true;\n    }, 800);\n  }\n\n  //preventing mouseenter event to do anything when coming from a touchEnd event\n  //fixing issue #3576\n  if (type === 'mouseenter' && !g_canFireMouseEnterNormalScroll) {\n    return;\n  }\n  var normalSelectors = getOptions().normalScrollElements.split(',');\n  normalSelectors.forEach(function (normalSelector) {\n    if (!isInsideOneNormalScroll) {\n      var isNormalScrollTarget = utils.matches(target, normalSelector);\n\n      //leaving a child inside the normalScoll element is not leaving the normalScroll #3661\n      var isNormalScrollChildFocused = utils.closest(target, normalSelector);\n      if (isNormalScrollTarget || isNormalScrollChildFocused) {\n        if (!FP.shared.isNormalScrollElement) {\n          setMouseHijack(false);\n        }\n        FP.shared.isNormalScrollElement = true;\n        isInsideOneNormalScroll = true;\n      }\n    }\n  });\n\n  //not inside a single normal scroll element anymore?\n  if (!isInsideOneNormalScroll && FP.shared.isNormalScrollElement) {\n    setMouseHijack(true);\n    FP.shared.isNormalScrollElement = false;\n  }\n}","map":{"version":3,"names":["utils","setMouseHijack","getOptions","FP","EventEmitter","events","g_canFireMouseEnterNormalScroll","on","bindEvents","normalScrollElements","forEach","eventName","forMouseLeaveOrTouch","onDestroy","docRemoveEvent","onMouseEnterOrLeave","allowScrolling","document","docAddEvent","e","type","isInsideOneNormalScroll","target","toElement","relatedTarget","setTimeout","normalSelectors","split","normalSelector","isNormalScrollTarget","matches","isNormalScrollChildFocused","closest","shared","isNormalScrollElement"],"sources":["/Users/rachelma/college/2023/fall/2223/internet-art/src/js/normalScrollElements.js"],"sourcesContent":["import * as utils from './common/utils.js';\nimport { setMouseHijack } from './mouse/wheel.js';\nimport { getOptions } from './common/options.js';\nimport { FP } from './common/constants.js';\nimport { EventEmitter } from './common/eventEmitter.js';\nimport { events } from './common/events.js';\n\nlet g_canFireMouseEnterNormalScroll = true;\n\nEventEmitter.on(events.bindEvents, bindEvents);\n\nfunction bindEvents(){\n    /**\n    * Applying normalScroll elements.\n    * Ignoring the scrolls over the specified selectors.\n    */\n    if(getOptions().normalScrollElements){\n        ['mouseenter', 'touchstart'].forEach(function(eventName){\n            forMouseLeaveOrTouch(eventName, false);\n        });\n\n        ['mouseleave', 'touchend'].forEach(function(eventName){\n            forMouseLeaveOrTouch(eventName, true);\n        });\n    }\n\n    EventEmitter.on(events.onDestroy, onDestroy);\n}\n\nfunction onDestroy(){\n    ['mouseenter', 'touchstart', 'mouseleave', 'touchend'].forEach(function(eventName){\n        utils.docRemoveEvent(eventName, onMouseEnterOrLeave, true); //true is required!\n    });\n}\n\nfunction forMouseLeaveOrTouch(eventName, allowScrolling){\n    //a way to pass arguments to the onMouseEnterOrLeave function\n    document['fp_' + eventName] = allowScrolling;\n    utils.docAddEvent(eventName, onMouseEnterOrLeave, true); //capturing phase\n}\n\nfunction onMouseEnterOrLeave(e) {\n    var type = e.type;\n    var isInsideOneNormalScroll = false;\n\n    //onMouseLeave will use the destination target, not the one we are moving away from\n    var target = type === 'mouseleave' ? e.toElement || e.relatedTarget : e.target;\n\n    //coming from closing a normalScrollElements modal or moving outside viewport?\n    if(target == document || !target){\n        setMouseHijack(true);\n\n        return;\n    }\n\n    if(type === 'touchend'){\n        g_canFireMouseEnterNormalScroll = false;\n        setTimeout(function(){\n            g_canFireMouseEnterNormalScroll = true;\n        }, 800);\n    }\n\n    //preventing mouseenter event to do anything when coming from a touchEnd event\n    //fixing issue #3576\n    if(type === 'mouseenter' && !g_canFireMouseEnterNormalScroll){\n        return;\n    }\n\n    var normalSelectors = getOptions().normalScrollElements.split(',');\n\n    normalSelectors.forEach(function(normalSelector){\n        if(!isInsideOneNormalScroll){\n            var isNormalScrollTarget = utils.matches(target, normalSelector);\n\n            //leaving a child inside the normalScoll element is not leaving the normalScroll #3661\n            var isNormalScrollChildFocused = utils.closest(target, normalSelector);\n\n            if(isNormalScrollTarget || isNormalScrollChildFocused){\n                if(!FP.shared.isNormalScrollElement){\n                    setMouseHijack(false);\n                }\n                FP.shared.isNormalScrollElement = true;\n                isInsideOneNormalScroll = true;\n            }\n        }\n    });\n\n    //not inside a single normal scroll element anymore?\n    if(!isInsideOneNormalScroll && FP.shared.isNormalScrollElement){\n        setMouseHijack(true);\n\n        FP.shared.isNormalScrollElement = false;\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,mBAAmB;AAC1C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,EAAE,QAAQ,uBAAuB;AAC1C,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,MAAM,QAAQ,oBAAoB;AAE3C,IAAIC,+BAA+B,GAAG,IAAI;AAE1CF,YAAY,CAACG,EAAE,CAACF,MAAM,CAACG,UAAU,EAAEA,UAAU,CAAC;AAE9C,SAASA,UAAUA,CAAA,EAAE;EACjB;AACJ;AACA;AACA;EACI,IAAGN,UAAU,CAAC,CAAC,CAACO,oBAAoB,EAAC;IACjC,CAAC,YAAY,EAAE,YAAY,CAAC,CAACC,OAAO,CAAC,UAASC,SAAS,EAAC;MACpDC,oBAAoB,CAACD,SAAS,EAAE,KAAK,CAAC;IAC1C,CAAC,CAAC;IAEF,CAAC,YAAY,EAAE,UAAU,CAAC,CAACD,OAAO,CAAC,UAASC,SAAS,EAAC;MAClDC,oBAAoB,CAACD,SAAS,EAAE,IAAI,CAAC;IACzC,CAAC,CAAC;EACN;EAEAP,YAAY,CAACG,EAAE,CAACF,MAAM,CAACQ,SAAS,EAAEA,SAAS,CAAC;AAChD;AAEA,SAASA,SAASA,CAAA,EAAE;EAChB,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,UAAU,CAAC,CAACH,OAAO,CAAC,UAASC,SAAS,EAAC;IAC9EX,KAAK,CAACc,cAAc,CAACH,SAAS,EAAEI,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC;AACN;AAEA,SAASH,oBAAoBA,CAACD,SAAS,EAAEK,cAAc,EAAC;EACpD;EACAC,QAAQ,CAAC,KAAK,GAAGN,SAAS,CAAC,GAAGK,cAAc;EAC5ChB,KAAK,CAACkB,WAAW,CAACP,SAAS,EAAEI,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7D;AAEA,SAASA,mBAAmBA,CAACI,CAAC,EAAE;EAC5B,IAAIC,IAAI,GAAGD,CAAC,CAACC,IAAI;EACjB,IAAIC,uBAAuB,GAAG,KAAK;;EAEnC;EACA,IAAIC,MAAM,GAAGF,IAAI,KAAK,YAAY,GAAGD,CAAC,CAACI,SAAS,IAAIJ,CAAC,CAACK,aAAa,GAAGL,CAAC,CAACG,MAAM;;EAE9E;EACA,IAAGA,MAAM,IAAIL,QAAQ,IAAI,CAACK,MAAM,EAAC;IAC7BrB,cAAc,CAAC,IAAI,CAAC;IAEpB;EACJ;EAEA,IAAGmB,IAAI,KAAK,UAAU,EAAC;IACnBd,+BAA+B,GAAG,KAAK;IACvCmB,UAAU,CAAC,YAAU;MACjBnB,+BAA+B,GAAG,IAAI;IAC1C,CAAC,EAAE,GAAG,CAAC;EACX;;EAEA;EACA;EACA,IAAGc,IAAI,KAAK,YAAY,IAAI,CAACd,+BAA+B,EAAC;IACzD;EACJ;EAEA,IAAIoB,eAAe,GAAGxB,UAAU,CAAC,CAAC,CAACO,oBAAoB,CAACkB,KAAK,CAAC,GAAG,CAAC;EAElED,eAAe,CAAChB,OAAO,CAAC,UAASkB,cAAc,EAAC;IAC5C,IAAG,CAACP,uBAAuB,EAAC;MACxB,IAAIQ,oBAAoB,GAAG7B,KAAK,CAAC8B,OAAO,CAACR,MAAM,EAAEM,cAAc,CAAC;;MAEhE;MACA,IAAIG,0BAA0B,GAAG/B,KAAK,CAACgC,OAAO,CAACV,MAAM,EAAEM,cAAc,CAAC;MAEtE,IAAGC,oBAAoB,IAAIE,0BAA0B,EAAC;QAClD,IAAG,CAAC5B,EAAE,CAAC8B,MAAM,CAACC,qBAAqB,EAAC;UAChCjC,cAAc,CAAC,KAAK,CAAC;QACzB;QACAE,EAAE,CAAC8B,MAAM,CAACC,qBAAqB,GAAG,IAAI;QACtCb,uBAAuB,GAAG,IAAI;MAClC;IACJ;EACJ,CAAC,CAAC;;EAEF;EACA,IAAG,CAACA,uBAAuB,IAAIlB,EAAE,CAAC8B,MAAM,CAACC,qBAAqB,EAAC;IAC3DjC,cAAc,CAAC,IAAI,CAAC;IAEpBE,EAAE,CAAC8B,MAAM,CAACC,qBAAqB,GAAG,KAAK;EAC3C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}